
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.33 (git sha1 2584903a060)


-- Running command ` 	read_verilog -lib +/ice40/cells_sim.v; 	read_verilog -sv soc_top.v ; 	hierarchy -top soc_top; 	synth_ice40 -top soc_top -json soc_top.json ' --

1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: soc_top.v
Parsing SystemVerilog input from `soc_top.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Generating RTLIL representation for module `\bram'.
Generating RTLIL representation for module `\soc_top'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \soc_top
Used module:     \simpleuart
Used module:     \bram
Used module:     \picorv32
Parameter \DEFAULT_DIV = 104

3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\simpleuart'.
Parameter \DEFAULT_DIV = 104
Generating RTLIL representation for module `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000'.
Parameter \MEM_SIZE_BYTES = 4096

3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\bram'.
Parameter \MEM_SIZE_BYTES = 4096
Generating RTLIL representation for module `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000'.
Parameter \ENABLE_COUNTERS = 0
Parameter \ENABLE_COUNTERS64 = 0
Parameter \TWO_STAGE_SHIFT = 1
Parameter \ENABLE_MUL = 0
Parameter \ENABLE_FAST_MUL = 0
Parameter \ENABLE_DIV = 0
Parameter \MASKED_IRQ = 0
Parameter \LATCHED_IRQ = 0
Parameter \PROGADDR_RESET = 0
Parameter \STACKADDR = 4096

3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 0
Parameter \ENABLE_COUNTERS64 = 0
Parameter \TWO_STAGE_SHIFT = 1
Parameter \ENABLE_MUL = 0
Parameter \ENABLE_FAST_MUL = 0
Parameter \ENABLE_DIV = 0
Parameter \MASKED_IRQ = 0
Parameter \LATCHED_IRQ = 0
Parameter \PROGADDR_RESET = 0
Parameter \STACKADDR = 4096
Generating RTLIL representation for module `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32'.

3.5. Analyzing design hierarchy..
Top module:  \soc_top
Used module:     $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000
Used module:     $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000
Used module:     $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32

3.6. Analyzing design hierarchy..
Top module:  \soc_top
Used module:     $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000
Used module:     $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000
Used module:     $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32
Removing unused module `\bram'.
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_pcpi_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\simpleuart'.
Removed 10 unused modules.

4. Executing SYNTH_ICE40 pass.

4.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Replacing existing blackbox module `\SB_IO' at /usr/bin/../share/yosys/ice40/cells_sim.v:17.1-121.10.
Generating RTLIL representation for module `\SB_IO'.
Replacing existing blackbox module `\SB_GB_IO' at /usr/bin/../share/yosys/ice40/cells_sim.v:123.1-160.10.
Generating RTLIL representation for module `\SB_GB_IO'.
Replacing existing blackbox module `\SB_GB' at /usr/bin/../share/yosys/ice40/cells_sim.v:162.1-172.10.
Generating RTLIL representation for module `\SB_GB'.
Replacing existing module `\SB_LUT4' at /usr/bin/../share/yosys/ice40/cells_sim.v:177.1-225.10.
Generating RTLIL representation for module `\SB_LUT4'.
Replacing existing module `\SB_CARRY' at /usr/bin/../share/yosys/ice40/cells_sim.v:228.1-260.10.
Generating RTLIL representation for module `\SB_CARRY'.
Replacing existing module `\SB_DFF' at /usr/bin/../share/yosys/ice40/cells_sim.v:265.1-300.10.
Generating RTLIL representation for module `\SB_DFF'.
Replacing existing module `\SB_DFFE' at /usr/bin/../share/yosys/ice40/cells_sim.v:303.1-347.10.
Generating RTLIL representation for module `\SB_DFFE'.
Replacing existing module `\SB_DFFSR' at /usr/bin/../share/yosys/ice40/cells_sim.v:350.1-397.10.
Generating RTLIL representation for module `\SB_DFFSR'.
Replacing existing module `\SB_DFFR' at /usr/bin/../share/yosys/ice40/cells_sim.v:400.1-468.10.
Generating RTLIL representation for module `\SB_DFFR'.
Replacing existing module `\SB_DFFSS' at /usr/bin/../share/yosys/ice40/cells_sim.v:471.1-518.10.
Generating RTLIL representation for module `\SB_DFFSS'.
Replacing existing module `\SB_DFFS' at /usr/bin/../share/yosys/ice40/cells_sim.v:521.1-589.10.
Generating RTLIL representation for module `\SB_DFFS'.
Replacing existing module `\SB_DFFESR' at /usr/bin/../share/yosys/ice40/cells_sim.v:592.1-650.10.
Generating RTLIL representation for module `\SB_DFFESR'.
Replacing existing module `\SB_DFFER' at /usr/bin/../share/yosys/ice40/cells_sim.v:653.1-730.10.
Generating RTLIL representation for module `\SB_DFFER'.
Replacing existing module `\SB_DFFESS' at /usr/bin/../share/yosys/ice40/cells_sim.v:733.1-791.10.
Generating RTLIL representation for module `\SB_DFFESS'.
Replacing existing module `\SB_DFFES' at /usr/bin/../share/yosys/ice40/cells_sim.v:794.1-871.10.
Generating RTLIL representation for module `\SB_DFFES'.
Replacing existing module `\SB_DFFN' at /usr/bin/../share/yosys/ice40/cells_sim.v:876.1-911.10.
Generating RTLIL representation for module `\SB_DFFN'.
Replacing existing module `\SB_DFFNE' at /usr/bin/../share/yosys/ice40/cells_sim.v:914.1-958.10.
Generating RTLIL representation for module `\SB_DFFNE'.
Replacing existing module `\SB_DFFNSR' at /usr/bin/../share/yosys/ice40/cells_sim.v:961.1-1008.10.
Generating RTLIL representation for module `\SB_DFFNSR'.
Replacing existing module `\SB_DFFNR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1011.1-1079.10.
Generating RTLIL representation for module `\SB_DFFNR'.
Replacing existing module `\SB_DFFNSS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1082.1-1129.10.
Generating RTLIL representation for module `\SB_DFFNSS'.
Replacing existing module `\SB_DFFNS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1132.1-1200.10.
Generating RTLIL representation for module `\SB_DFFNS'.
Replacing existing module `\SB_DFFNESR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1203.1-1261.10.
Generating RTLIL representation for module `\SB_DFFNESR'.
Replacing existing module `\SB_DFFNER' at /usr/bin/../share/yosys/ice40/cells_sim.v:1264.1-1341.10.
Generating RTLIL representation for module `\SB_DFFNER'.
Replacing existing module `\SB_DFFNESS' at /usr/bin/../share/yosys/ice40/cells_sim.v:1344.1-1402.10.
Generating RTLIL representation for module `\SB_DFFNESS'.
Replacing existing module `\SB_DFFNES' at /usr/bin/../share/yosys/ice40/cells_sim.v:1405.1-1483.10.
Generating RTLIL representation for module `\SB_DFFNES'.
Replacing existing blackbox module `\SB_RAM40_4K' at /usr/bin/../share/yosys/ice40/cells_sim.v:1487.1-1724.10.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Replacing existing blackbox module `\SB_RAM40_4KNR' at /usr/bin/../share/yosys/ice40/cells_sim.v:1726.1-1860.10.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Replacing existing blackbox module `\SB_RAM40_4KNW' at /usr/bin/../share/yosys/ice40/cells_sim.v:1862.1-1996.10.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Replacing existing blackbox module `\SB_RAM40_4KNRNW' at /usr/bin/../share/yosys/ice40/cells_sim.v:1998.1-2132.10.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Replacing existing blackbox module `\ICESTORM_LC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2136.1-2420.10.
Generating RTLIL representation for module `\ICESTORM_LC'.
Replacing existing blackbox module `\SB_PLL40_CORE' at /usr/bin/../share/yosys/ice40/cells_sim.v:2425.1-2453.10.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Replacing existing blackbox module `\SB_PLL40_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2456.1-2484.10.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Replacing existing blackbox module `\SB_PLL40_2_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2487.1-2518.10.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Replacing existing blackbox module `\SB_PLL40_2F_CORE' at /usr/bin/../share/yosys/ice40/cells_sim.v:2521.1-2553.10.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Replacing existing blackbox module `\SB_PLL40_2F_PAD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2556.1-2588.10.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Replacing existing blackbox module `\SB_WARMBOOT' at /usr/bin/../share/yosys/ice40/cells_sim.v:2593.1-2598.10.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Replacing existing blackbox module `\SB_SPRAM256KA' at /usr/bin/../share/yosys/ice40/cells_sim.v:2600.1-2661.10.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Replacing existing blackbox module `\SB_HFOSC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2664.1-2681.10.
Generating RTLIL representation for module `\SB_HFOSC'.
Replacing existing blackbox module `\SB_LFOSC' at /usr/bin/../share/yosys/ice40/cells_sim.v:2684.1-2689.10.
Generating RTLIL representation for module `\SB_LFOSC'.
Replacing existing blackbox module `\SB_RGBA_DRV' at /usr/bin/../share/yosys/ice40/cells_sim.v:2692.1-2706.10.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Replacing existing blackbox module `\SB_LED_DRV_CUR' at /usr/bin/../share/yosys/ice40/cells_sim.v:2709.1-2713.10.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Replacing existing blackbox module `\SB_RGB_DRV' at /usr/bin/../share/yosys/ice40/cells_sim.v:2716.1-2730.10.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Replacing existing blackbox module `\SB_I2C' at /usr/bin/../share/yosys/ice40/cells_sim.v:2733.1-2773.10.
Generating RTLIL representation for module `\SB_I2C'.
Replacing existing blackbox module `\SB_SPI' at /usr/bin/../share/yosys/ice40/cells_sim.v:2776.1-2827.10.
Generating RTLIL representation for module `\SB_SPI'.
Replacing existing blackbox module `\SB_LEDDA_IP' at /usr/bin/../share/yosys/ice40/cells_sim.v:2830.1-2853.10.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Replacing existing blackbox module `\SB_FILTER_50NS' at /usr/bin/../share/yosys/ice40/cells_sim.v:2856.1-2860.10.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Replacing existing blackbox module `\SB_IO_I3C' at /usr/bin/../share/yosys/ice40/cells_sim.v:2862.1-2929.10.
Generating RTLIL representation for module `\SB_IO_I3C'.
Replacing existing blackbox module `\SB_IO_OD' at /usr/bin/../share/yosys/ice40/cells_sim.v:2931.1-2993.10.
Generating RTLIL representation for module `\SB_IO_OD'.
Replacing existing blackbox module `\SB_MAC16' at /usr/bin/../share/yosys/ice40/cells_sim.v:2996.1-3164.10.
Generating RTLIL representation for module `\SB_MAC16'.
Replacing existing blackbox module `\ICESTORM_RAM' at /usr/bin/../share/yosys/ice40/cells_sim.v:3167.1-3502.10.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

4.2. Executing HIERARCHY pass (managing design hierarchy).

4.2.1. Analyzing design hierarchy..
Top module:  \soc_top
Used module:     $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000
Used module:     $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000
Used module:     $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32

4.2.2. Analyzing design hierarchy..
Top module:  \soc_top
Used module:     $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000
Used module:     $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000
Used module:     $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32
Removed 0 unused modules.

4.3. Executing PROC pass (convert processes to netlists).

4.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:0$1872'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:0$1872'.
Found and cleaned up 15 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
Found and cleaned up 1 empty switch in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1348$1681'.
Found and cleaned up 6 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:546$1317'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:546$1317'.
Removing empty process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:0$1191'.
Cleaned up 23 empty switches.

4.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$soc_top.v:34$1101 in module soc_top.
Marked 34 switch rules as full_case in process $proc$picorv32.v:1402$1697 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:1337$1672 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1309$1660 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1295$1655 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1186$1620 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:858$1357 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:809$1355 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:778$1351 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 48 switch rules as full_case in process $proc$picorv32.v:701$1350 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:565$1326 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:430$1288 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:401$1285 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:401$1285 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:390$1280 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:325$1206 in module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Marked 5 switch rules as full_case in process $proc$bram.v:31$1150 in module $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$2113 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$2106 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$2102 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$2095 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$2092 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$2089 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$2086 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$2083 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$2075 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$2068 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$2064 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$2057 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$2054 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$2051 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$2048 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$2045 in module SB_DFFSR.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$1135 in module $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$1126 in module $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$1124 in module $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.
Removed a total of 2 dead cases.

4.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 14 redundant assignments.
Promoted 93 assignments to connections.

4.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\soc_top.$proc$soc_top.v:25$1119'.
  Set init value: \reset_cnt = 8'00000000
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2116'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2112'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2105'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2101'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2094'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2091'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2088'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2085'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2082'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2080'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2078'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2074'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2067'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2063'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2056'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2053'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2050'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2047'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2044'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2042'.
  Set init value: \Q = 1'0

4.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$2113'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$2102'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$2092'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$2086'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$2075'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$2064'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$2054'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$2048'.

4.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~229 debug messages>

4.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\soc_top.$proc$soc_top.v:25$1119'.
Creating decoders for process `\soc_top.$proc$soc_top.v:34$1101'.
     1/1: $0\debug_led_reg[7:0]
Creating decoders for process `\soc_top.$proc$soc_top.v:28$1098'.
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
     1/78: $17\next_irq_pending[2:2]
     2/78: $16\next_irq_pending[2:2]
     3/78: $15\next_irq_pending[2:2]
     4/78: $14\next_irq_pending[2:2]
     5/78: $13\next_irq_pending[2:2]
     6/78: $12\next_irq_pending[2:2]
     7/78: $11\next_irq_pending[2:2]
     8/78: $2\next_irq_pending[31:0] [31:2]
     9/78: $3\set_mem_do_rdata[0:0]
    10/78: $2\next_irq_pending[31:0] [1]
    11/78: $3\set_mem_do_wdata[0:0]
    12/78: $2\next_irq_pending[31:0] [0]
    13/78: $4\set_mem_do_rinst[0:0]
    14/78: $3\set_mem_do_rinst[0:0]
    15/78: $4\set_mem_do_wdata[0:0]
    16/78: $9\next_irq_pending[1:1]
    17/78: $8\next_irq_pending[1:1]
    18/78: $7\next_irq_pending[1:1]
    19/78: $4\set_mem_do_rdata[0:0]
    20/78: $5\next_irq_pending[1:1]
    21/78: $4\next_irq_pending[1:1]
    22/78: $10\next_irq_pending[1:1]
    23/78: $5\set_mem_do_rinst[0:0]
    24/78: $6\next_irq_pending[1:1]
    25/78: $3\next_irq_pending[31:0]
    26/78: $3\current_pc[31:0]
    27/78: $2\current_pc[31:0]
    28/78: $2\set_mem_do_wdata[0:0]
    29/78: $2\set_mem_do_rdata[0:0]
    30/78: $2\set_mem_do_rinst[0:0]
    31/78: $1\next_irq_pending[31:0]
    32/78: $1\current_pc[31:0]
    33/78: $1\set_mem_do_wdata[0:0]
    34/78: $1\set_mem_do_rdata[0:0]
    35/78: $1\set_mem_do_rinst[0:0]
    36/78: $0\trace_data[35:0]
    37/78: $0\count_instr[63:0]
    38/78: $0\count_cycle[63:0]
    39/78: $0\trace_valid[0:0]
    40/78: $0\do_waitirq[0:0]
    41/78: $0\decoder_pseudo_trigger[0:0]
    42/78: $0\decoder_trigger[0:0]
    43/78: $0\alu_wait_2[0:0]
    44/78: $0\alu_wait[0:0]
    45/78: $0\reg_out[31:0]
    46/78: $0\reg_sh[4:0]
    47/78: $0\trap[0:0]
    48/78: $0\pcpi_timeout[0:0]
    49/78: $0\latched_rd[4:0]
    50/78: $0\latched_is_lb[0:0]
    51/78: $0\latched_is_lh[0:0]
    52/78: $0\latched_is_lu[0:0]
    53/78: $0\latched_trace[0:0]
    54/78: $0\latched_compr[0:0]
    55/78: $0\latched_branch[0:0]
    56/78: $0\latched_stalu[0:0]
    57/78: $0\latched_store[0:0]
    58/78: $0\irq_state[1:0]
    59/78: $0\cpu_state[7:0]
    60/78: $0\dbg_rs2val_valid[0:0]
    61/78: $0\dbg_rs1val_valid[0:0]
    62/78: $0\dbg_rs2val[31:0]
    63/78: $0\dbg_rs1val[31:0]
    64/78: $0\mem_do_wdata[0:0]
    65/78: $0\mem_do_rdata[0:0]
    66/78: $0\mem_do_rinst[0:0]
    67/78: $0\mem_do_prefetch[0:0]
    68/78: $0\mem_wordsize[1:0]
    69/78: $0\timer[31:0]
    70/78: $0\irq_mask[31:0]
    71/78: $0\irq_active[0:0]
    72/78: $0\irq_delay[0:0]
    73/78: $0\reg_op2[31:0]
    74/78: $0\reg_op1[31:0]
    75/78: $0\reg_next_pc[31:0]
    76/78: $0\reg_pc[31:0]
    77/78: $0\eoi[31:0]
    78/78: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1348$1681'.
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1337$1672'.
     1/3: $1$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1680
     2/3: $1$memwr$\cpuregs$picorv32.v:1344$1205_DATA[31:0]$1679
     3/3: $1$memwr$\cpuregs$picorv32.v:1344$1205_ADDR[4:0]$1678
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1309$1660'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1295$1655'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1293$1654'.
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1249$1632'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1186$1620'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
     1/77: $0\decoded_rs1[4:0] [4]
     2/77: $0\decoded_imm_j[31:0] [10]
     3/77: $0\decoded_imm_j[31:0] [7]
     4/77: $0\decoded_imm_j[31:0] [6]
     5/77: $0\decoded_imm_j[31:0] [3:1]
     6/77: $0\decoded_imm_j[31:0] [5]
     7/77: $0\decoded_imm_j[31:0] [9:8]
     8/77: $0\decoded_imm_j[31:0] [31:20]
     9/77: $0\decoded_imm_j[31:0] [4]
    10/77: $0\decoded_imm_j[31:0] [11]
    11/77: $0\decoded_imm_j[31:0] [0]
    12/77: $0\decoded_rs1[4:0] [3:0]
    13/77: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/77: $0\is_alu_reg_reg[0:0]
    15/77: $0\is_alu_reg_imm[0:0]
    16/77: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/77: $0\is_sll_srl_sra[0:0]
    18/77: $0\is_sb_sh_sw[0:0]
    19/77: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/77: $0\is_slli_srli_srai[0:0]
    21/77: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/77: $0\compressed_instr[0:0]
    23/77: $0\is_compare[0:0]
    24/77: $0\decoded_imm[31:0]
    25/77: $0\decoded_rs2[4:0]
    26/77: $0\decoded_imm_j[31:0] [19:12]
    27/77: $0\decoded_rd[4:0]
    28/77: $0\instr_timer[0:0]
    29/77: $0\instr_waitirq[0:0]
    30/77: $0\instr_maskirq[0:0]
    31/77: $0\instr_retirq[0:0]
    32/77: $0\instr_setq[0:0]
    33/77: $0\instr_getq[0:0]
    34/77: $0\instr_fence[0:0]
    35/77: $0\instr_ecall_ebreak[0:0]
    36/77: $0\instr_rdinstrh[0:0]
    37/77: $0\instr_rdinstr[0:0]
    38/77: $0\instr_rdcycleh[0:0]
    39/77: $0\instr_rdcycle[0:0]
    40/77: $0\instr_and[0:0]
    41/77: $0\instr_or[0:0]
    42/77: $0\instr_sra[0:0]
    43/77: $0\instr_srl[0:0]
    44/77: $0\instr_xor[0:0]
    45/77: $0\instr_sltu[0:0]
    46/77: $0\instr_slt[0:0]
    47/77: $0\instr_sll[0:0]
    48/77: $0\instr_sub[0:0]
    49/77: $0\instr_add[0:0]
    50/77: $0\instr_srai[0:0]
    51/77: $0\instr_srli[0:0]
    52/77: $0\instr_slli[0:0]
    53/77: $0\instr_andi[0:0]
    54/77: $0\instr_ori[0:0]
    55/77: $0\instr_xori[0:0]
    56/77: $0\instr_sltiu[0:0]
    57/77: $0\instr_slti[0:0]
    58/77: $0\instr_addi[0:0]
    59/77: $0\instr_sw[0:0]
    60/77: $0\instr_sh[0:0]
    61/77: $0\instr_sb[0:0]
    62/77: $0\instr_lhu[0:0]
    63/77: $0\instr_lbu[0:0]
    64/77: $0\instr_lw[0:0]
    65/77: $0\instr_lh[0:0]
    66/77: $0\instr_lb[0:0]
    67/77: $0\instr_bgeu[0:0]
    68/77: $0\instr_bltu[0:0]
    69/77: $0\instr_bge[0:0]
    70/77: $0\instr_blt[0:0]
    71/77: $0\instr_bne[0:0]
    72/77: $0\instr_beq[0:0]
    73/77: $0\instr_jalr[0:0]
    74/77: $0\instr_jal[0:0]
    75/77: $0\instr_auipc[0:0]
    76/77: $0\instr_lui[0:0]
    77/77: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:701$1350'.
     1/48: $48\new_ascii_instr[63:0]
     2/48: $47\new_ascii_instr[63:0]
     3/48: $46\new_ascii_instr[63:0]
     4/48: $45\new_ascii_instr[63:0]
     5/48: $44\new_ascii_instr[63:0]
     6/48: $43\new_ascii_instr[63:0]
     7/48: $42\new_ascii_instr[63:0]
     8/48: $41\new_ascii_instr[63:0]
     9/48: $40\new_ascii_instr[63:0]
    10/48: $39\new_ascii_instr[63:0]
    11/48: $38\new_ascii_instr[63:0]
    12/48: $37\new_ascii_instr[63:0]
    13/48: $36\new_ascii_instr[63:0]
    14/48: $35\new_ascii_instr[63:0]
    15/48: $34\new_ascii_instr[63:0]
    16/48: $33\new_ascii_instr[63:0]
    17/48: $32\new_ascii_instr[63:0]
    18/48: $31\new_ascii_instr[63:0]
    19/48: $30\new_ascii_instr[63:0]
    20/48: $29\new_ascii_instr[63:0]
    21/48: $28\new_ascii_instr[63:0]
    22/48: $27\new_ascii_instr[63:0]
    23/48: $26\new_ascii_instr[63:0]
    24/48: $25\new_ascii_instr[63:0]
    25/48: $24\new_ascii_instr[63:0]
    26/48: $23\new_ascii_instr[63:0]
    27/48: $22\new_ascii_instr[63:0]
    28/48: $21\new_ascii_instr[63:0]
    29/48: $20\new_ascii_instr[63:0]
    30/48: $19\new_ascii_instr[63:0]
    31/48: $18\new_ascii_instr[63:0]
    32/48: $17\new_ascii_instr[63:0]
    33/48: $16\new_ascii_instr[63:0]
    34/48: $15\new_ascii_instr[63:0]
    35/48: $14\new_ascii_instr[63:0]
    36/48: $13\new_ascii_instr[63:0]
    37/48: $12\new_ascii_instr[63:0]
    38/48: $11\new_ascii_instr[63:0]
    39/48: $10\new_ascii_instr[63:0]
    40/48: $9\new_ascii_instr[63:0]
    41/48: $8\new_ascii_instr[63:0]
    42/48: $7\new_ascii_instr[63:0]
    43/48: $6\new_ascii_instr[63:0]
    44/48: $5\new_ascii_instr[63:0]
    45/48: $4\new_ascii_instr[63:0]
    46/48: $3\new_ascii_instr[63:0]
    47/48: $2\new_ascii_instr[63:0]
    48/48: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:430$1288'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:401$1285'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:390$1280'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
     1/26: $2$memwr$\mem$bram.v:39$1149_EN[31:0]$1189
     2/26: $2$memwr$\mem$bram.v:39$1149_DATA[31:0]$1188
     3/26: $2$memwr$\mem$bram.v:39$1149_ADDR[31:0]$1187
     4/26: $2$memwr$\mem$bram.v:38$1148_EN[31:0]$1186
     5/26: $2$memwr$\mem$bram.v:38$1148_DATA[31:0]$1185
     6/26: $2$memwr$\mem$bram.v:38$1148_ADDR[31:0]$1184
     7/26: $2$memwr$\mem$bram.v:37$1147_EN[31:0]$1183
     8/26: $2$memwr$\mem$bram.v:37$1147_DATA[31:0]$1182
     9/26: $2$memwr$\mem$bram.v:37$1147_ADDR[31:0]$1181
    10/26: $2$memwr$\mem$bram.v:36$1146_EN[31:0]$1180
    11/26: $2$memwr$\mem$bram.v:36$1146_DATA[31:0]$1179
    12/26: $2$memwr$\mem$bram.v:36$1146_ADDR[31:0]$1178
    13/26: $1$memwr$\mem$bram.v:39$1149_EN[31:0]$1176
    14/26: $1$memwr$\mem$bram.v:39$1149_DATA[31:0]$1175
    15/26: $1$memwr$\mem$bram.v:39$1149_ADDR[31:0]$1174
    16/26: $1$memwr$\mem$bram.v:38$1148_EN[31:0]$1173
    17/26: $1$memwr$\mem$bram.v:38$1148_DATA[31:0]$1172
    18/26: $1$memwr$\mem$bram.v:38$1148_ADDR[31:0]$1171
    19/26: $1$memwr$\mem$bram.v:37$1147_EN[31:0]$1170
    20/26: $1$memwr$\mem$bram.v:37$1147_DATA[31:0]$1169
    21/26: $1$memwr$\mem$bram.v:37$1147_ADDR[31:0]$1168
    22/26: $1$memwr$\mem$bram.v:36$1146_EN[31:0]$1167
    23/26: $1$memwr$\mem$bram.v:36$1146_DATA[31:0]$1166
    24/26: $1$memwr$\mem$bram.v:36$1146_ADDR[31:0]$1165
    25/26: $0\ready_reg[0:0]
    26/26: $0\rdata_reg[31:0]
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2116'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$2113'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2112'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$2106'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2105'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$2102'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2101'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$2095'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2094'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$2092'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2091'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$2089'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2088'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$2086'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2085'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$2083'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2082'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$2081'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2080'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$2079'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2078'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$2075'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2074'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$2068'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2067'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$2064'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2063'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$2057'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2056'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$2054'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2053'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$2051'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2050'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$2048'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2047'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$2045'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2044'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$2043'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2042'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$2041'.
Creating decoders for process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:55$1124'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]

4.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cpuregs_rs1' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1348$1681'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cpuregs_rs2' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1348$1681'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoded_rs' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1348$1681'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cpuregs_write' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1309$1660'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cpuregs_wrdata' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1309$1660'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\clear_prefetched_high_word' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1295$1655'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_out' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1249$1632'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_out_0' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1249$1632'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_ascii_state' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1186$1620'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_insn_opcode' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_ascii_instr' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_insn_imm' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_insn_rs1' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_insn_rs2' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_insn_rd' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\new_ascii_instr' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:701$1350'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_add_sub' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_shl' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_shr' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_eq' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_ltu' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_lts' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_la_wdata' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:401$1285'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_la_wstrb' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:401$1285'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_rdata_word' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:401$1285'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_int_wr' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_int_rd' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_int_wait' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.
No latch inferred for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_int_ready' from process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.

4.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\soc_top.\debug_led_reg' using process `\soc_top.$proc$soc_top.v:34$1101'.
  created $dff cell `$procdff$5239' with positive edge clock.
Creating register for signal `\soc_top.\reset_cnt' using process `\soc_top.$proc$soc_top.v:28$1098'.
  created $dff cell `$procdff$5240' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\trap' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5241' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_valid' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5242' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\eoi' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5243' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\trace_valid' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5244' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\trace_data' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5245' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\count_cycle' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5246' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\count_instr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5247' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\reg_pc' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5248' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\reg_next_pc' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5249' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\reg_op1' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5250' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\reg_op2' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5251' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\reg_out' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5252' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\reg_sh' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5253' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\irq_delay' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5254' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\irq_active' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5255' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\irq_mask' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5256' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\irq_pending' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5257' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\timer' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5258' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_wordsize' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5259' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_do_prefetch' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5260' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_do_rinst' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5261' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_do_rdata' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5262' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_do_wdata' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5263' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoder_trigger' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5264' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoder_trigger_q' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5265' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoder_pseudo_trigger' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5266' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5267' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_rs1val' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5268' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_rs2val' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5269' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_rs1val_valid' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5270' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_rs2val_valid' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5271' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cpu_state' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5272' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\irq_state' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5273' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\set_mem_do_rinst' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5274' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\set_mem_do_rdata' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5275' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\set_mem_do_wdata' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5276' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_store' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5277' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_stalu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5278' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_branch' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5279' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_compr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5280' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_trace' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5281' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_is_lu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5282' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_is_lh' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5283' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_is_lb' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5284' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\latched_rd' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5285' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\current_pc' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5286' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_timeout' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5287' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\next_irq_pending' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5288' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\do_waitirq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5289' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_out_q' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5290' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_out_0_q' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5291' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_wait' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5292' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\alu_wait_2' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
  created $dff cell `$procdff$5293' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$memwr$\cpuregs$picorv32.v:1344$1205_ADDR' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1337$1672'.
  created $dff cell `$procdff$5294' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$memwr$\cpuregs$picorv32.v:1344$1205_DATA' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1337$1672'.
  created $dff cell `$procdff$5295' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$memwr$\cpuregs$picorv32.v:1344$1205_EN' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1337$1672'.
  created $dff cell `$procdff$5296' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\clear_prefetched_high_word_q' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1293$1654'.
  created $dff cell `$procdff$5297' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\pcpi_insn' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5298' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_lui' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5299' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_auipc' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5300' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_jal' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5301' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_jalr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5302' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_beq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5303' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_bne' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5304' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_blt' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5305' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_bge' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5306' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_bltu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5307' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_bgeu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5308' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_lb' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5309' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_lh' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5310' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_lw' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5311' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_lbu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5312' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_lhu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5313' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sb' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5314' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sh' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5315' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sw' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5316' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_addi' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5317' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_slti' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5318' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sltiu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5319' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_xori' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5320' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_ori' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5321' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_andi' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5322' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_slli' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5323' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_srli' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5324' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_srai' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5325' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_add' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5326' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sub' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5327' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sll' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5328' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_slt' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5329' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sltu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5330' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_xor' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5331' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_srl' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5332' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_sra' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5333' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_or' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5334' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_and' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5335' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_rdcycle' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5336' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_rdcycleh' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5337' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_rdinstr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5338' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_rdinstrh' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5339' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_ecall_ebreak' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5340' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_fence' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5341' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_getq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5342' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_setq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5343' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_retirq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5344' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_maskirq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5345' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_waitirq' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5346' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\instr_timer' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5347' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoded_rd' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5348' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoded_rs1' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5349' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoded_rs2' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5350' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoded_imm' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5351' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\decoded_imm_j' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5352' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\compressed_instr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5353' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_lui_auipc_jal' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5354' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5355' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_slli_srli_srai' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5356' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5357' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_sb_sh_sw' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5358' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_sll_srl_sra' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5359' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5360' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_slti_blt_slt' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5361' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5362' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5363' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_lbu_lhu_lw' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5364' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_alu_reg_imm' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5365' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_alu_reg_reg' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5366' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\is_compare' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
  created $dff cell `$procdff$5367' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_insn_addr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5368' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\q_ascii_instr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5369' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\q_insn_imm' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5370' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\q_insn_opcode' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5371' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\q_insn_rs1' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5372' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\q_insn_rs2' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5373' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\q_insn_rd' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5374' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_next' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5375' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\dbg_valid_insn' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5376' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cached_ascii_instr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5377' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cached_insn_imm' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5378' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cached_insn_opcode' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5379' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cached_insn_rs1' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5380' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cached_insn_rs2' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5381' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\cached_insn_rd' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
  created $dff cell `$procdff$5382' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_valid' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5383' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_instr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5384' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_addr' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5385' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_wdata' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5386' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_wstrb' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5387' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_state' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5388' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_la_secondword' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5389' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\prefetched_high_word' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5390' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_16bit_buffer' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
  created $dff cell `$procdff$5391' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\next_insn_opcode' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:430$1288'.
  created $dff cell `$procdff$5392' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_rdata_q' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:430$1288'.
  created $dff cell `$procdff$5393' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\mem_la_firstword_reg' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:390$1280'.
  created $dff cell `$procdff$5394' with positive edge clock.
Creating register for signal `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.\last_mem_valid' using process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:390$1280'.
  created $dff cell `$procdff$5395' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.\rdata_reg' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5396' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.\ready_reg' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5397' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:36$1146_ADDR' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5398' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:36$1146_DATA' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5399' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:36$1146_EN' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5400' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:37$1147_ADDR' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5401' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:37$1147_DATA' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5402' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:37$1147_EN' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5403' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:38$1148_ADDR' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5404' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:38$1148_DATA' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5405' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:38$1148_EN' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5406' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:39$1149_ADDR' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5407' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:39$1149_DATA' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5408' with positive edge clock.
Creating register for signal `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$memwr$\mem$bram.v:39$1149_EN' using process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
  created $dff cell `$procdff$5409' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$2113'.
  created $adff cell `$procdff$5410' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$2106'.
  created $dff cell `$procdff$5411' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$2102'.
  created $adff cell `$procdff$5412' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$2095'.
  created $dff cell `$procdff$5413' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$2092'.
  created $adff cell `$procdff$5414' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$2089'.
  created $dff cell `$procdff$5415' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$2086'.
  created $adff cell `$procdff$5416' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$2083'.
  created $dff cell `$procdff$5417' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$2081'.
  created $dff cell `$procdff$5418' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$2079'.
  created $dff cell `$procdff$5419' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$2075'.
  created $adff cell `$procdff$5420' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$2068'.
  created $dff cell `$procdff$5421' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$2064'.
  created $adff cell `$procdff$5422' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$2057'.
  created $dff cell `$procdff$5423' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$2054'.
  created $adff cell `$procdff$5424' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$2051'.
  created $dff cell `$procdff$5425' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$2048'.
  created $adff cell `$procdff$5426' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$2045'.
  created $dff cell `$procdff$5427' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$2043'.
  created $dff cell `$procdff$5428' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$2041'.
  created $dff cell `$procdff$5429' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\send_pattern' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
  created $dff cell `$procdff$5430' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\send_bitcnt' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
  created $dff cell `$procdff$5431' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\send_divcnt' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
  created $dff cell `$procdff$5432' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\send_dummy' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
  created $dff cell `$procdff$5433' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\recv_state' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
  created $dff cell `$procdff$5434' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\recv_divcnt' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
  created $dff cell `$procdff$5435' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\recv_pattern' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
  created $dff cell `$procdff$5436' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\recv_buf_data' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
  created $dff cell `$procdff$5437' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\recv_buf_valid' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
  created $dff cell `$procdff$5438' with positive edge clock.
Creating register for signal `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.\cfg_divider' using process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:55$1124'.
  created $dff cell `$procdff$5439' with positive edge clock.

4.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `soc_top.$proc$soc_top.v:25$1119'.
Found and cleaned up 2 empty switches in `\soc_top.$proc$soc_top.v:34$1101'.
Removing empty process `soc_top.$proc$soc_top.v:34$1101'.
Removing empty process `soc_top.$proc$soc_top.v:28$1098'.
Found and cleaned up 53 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1402$1697'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1348$1681'.
Found and cleaned up 1 empty switch in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1337$1672'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1337$1672'.
Found and cleaned up 2 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1309$1660'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1309$1660'.
Found and cleaned up 2 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1295$1655'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1295$1655'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1293$1654'.
Found and cleaned up 2 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1249$1632'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1249$1632'.
Found and cleaned up 8 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1186$1620'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1186$1620'.
Found and cleaned up 22 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:858$1357'.
Found and cleaned up 3 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:809$1355'.
Found and cleaned up 5 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:778$1351'.
Found and cleaned up 48 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:701$1350'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:701$1350'.
Found and cleaned up 16 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:565$1326'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:1239$1861'.
Found and cleaned up 19 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:430$1288'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:430$1288'.
Found and cleaned up 3 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:401$1285'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:401$1285'.
Found and cleaned up 2 empty switches in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:390$1280'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:390$1280'.
Found and cleaned up 1 empty switch in `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.
Removing empty process `$paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.$proc$picorv32.v:325$1206'.
Found and cleaned up 5 empty switches in `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
Removing empty process `$paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.$proc$bram.v:31$1150'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2116'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$2113'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1414$2113'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2112'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$2106'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1353$2106'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2105'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$2102'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1273$2102'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2101'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$2095'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1212$2095'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2094'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1138$2092'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2091'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$2089'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1088$2089'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2088'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1017$2086'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2085'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$2083'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:967$2083'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2082'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$2081'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:922$2081'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2080'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:882$2079'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2078'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$2075'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:803$2075'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2074'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$2068'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:742$2068'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2067'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$2064'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:662$2064'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2063'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$2057'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:601$2057'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2056'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:527$2054'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2053'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$2051'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:477$2051'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2050'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:406$2048'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2047'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$2045'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:356$2045'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2044'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$2043'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:311$2043'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$2042'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$2041'.
Found and cleaned up 5 empty switches in `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
Removing empty process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:109$1135'.
Found and cleaned up 7 empty switches in `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
Removing empty process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:66$1126'.
Found and cleaned up 5 empty switches in `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:55$1124'.
Removing empty process `$paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.$proc$simpleuart.v:55$1124'.
Cleaned up 229 empty switches.

4.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~2 debug messages>
Optimizing module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
<suppressed ~838 debug messages>
Optimizing module $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.
Optimizing module $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.
<suppressed ~17 debug messages>

4.4. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$d60d9e93144ff6e8767ea0a4d1efdf1300e7ed85\picorv32.
Deleting now unused module $paramod\bram\MEM_SIZE_BYTES=s32'00000000000000000001000000000000.
Deleting now unused module $paramod\simpleuart\DEFAULT_DIV=s32'00000000000000000000000001101000.
<suppressed ~3 debug messages>

4.5. Executing TRIBUF pass.

4.6. Executing DEMINOUT pass (demote inout ports to input or output).

4.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~6 debug messages>

4.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 773 unused cells and 2400 unused wires.
<suppressed ~844 debug messages>

4.9. Executing CHECK pass (checking for obvious problems).
Checking module soc_top...
Found and reported 0 problems.

4.10. Executing OPT pass (performing simple optimizations).

4.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~594 debug messages>
Removed a total of 198 cells.

4.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2262.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2272.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2274.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2280.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2287.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2289.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2295.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2316.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2319.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2331.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2338.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2341.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2365.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2368.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2377.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2380.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2388.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2390.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2393.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2454.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2456.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2459.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2541.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2546.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2549.
    dead port 1/3 on $pmux $flatten\cpu.$procmux$2602.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$4968.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$4974.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$4980.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2634.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$4986.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$4992.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$4998.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$5004.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2647.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$5010.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$5016.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$5022.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$5028.
    dead port 2/2 on $mux $flatten\cpu.$procmux$2660.
    dead port 2/2 on $mux $flatten\bram_i.$procmux$5034.
    dead port 1/7 on $pmux $flatten\cpu.$procmux$2888.
    dead port 2/7 on $pmux $flatten\cpu.$procmux$2888.
    dead port 3/7 on $pmux $flatten\cpu.$procmux$2888.
    dead port 4/7 on $pmux $flatten\cpu.$procmux$2888.
    dead port 5/7 on $pmux $flatten\cpu.$procmux$2888.
    dead port 6/7 on $pmux $flatten\cpu.$procmux$2888.
    dead port 1/5 on $pmux $flatten\cpu.$procmux$2895.
    dead port 2/5 on $pmux $flatten\cpu.$procmux$2895.
    dead port 3/5 on $pmux $flatten\cpu.$procmux$2895.
    dead port 4/5 on $pmux $flatten\cpu.$procmux$2895.
    dead port 5/5 on $pmux $flatten\cpu.$procmux$2895.
    dead port 4/12 on $pmux $flatten\cpu.$procmux$2928.
    dead port 5/12 on $pmux $flatten\cpu.$procmux$2928.
    dead port 6/12 on $pmux $flatten\cpu.$procmux$2928.
    dead port 7/12 on $pmux $flatten\cpu.$procmux$2928.
    dead port 8/12 on $pmux $flatten\cpu.$procmux$2928.
    dead port 10/12 on $pmux $flatten\cpu.$procmux$2928.
    dead port 1/7 on $pmux $flatten\cpu.$procmux$3133.
    dead port 2/7 on $pmux $flatten\cpu.$procmux$3133.
    dead port 3/7 on $pmux $flatten\cpu.$procmux$3133.
    dead port 4/7 on $pmux $flatten\cpu.$procmux$3133.
    dead port 5/7 on $pmux $flatten\cpu.$procmux$3133.
    dead port 6/7 on $pmux $flatten\cpu.$procmux$3133.
    dead port 3/4 on $pmux $flatten\cpu.$procmux$3197.
    dead port 1/2 on $mux $flatten\cpu.$procmux$3204.
    dead port 2/2 on $mux $flatten\cpu.$procmux$3204.
    dead port 4/12 on $pmux $flatten\cpu.$procmux$3216.
    dead port 5/12 on $pmux $flatten\cpu.$procmux$3216.
    dead port 6/12 on $pmux $flatten\cpu.$procmux$3216.
    dead port 7/12 on $pmux $flatten\cpu.$procmux$3216.
    dead port 8/12 on $pmux $flatten\cpu.$procmux$3216.
    dead port 10/12 on $pmux $flatten\cpu.$procmux$3216.
    dead port 3/4 on $pmux $flatten\cpu.$procmux$3398.
    dead port 4/12 on $pmux $flatten\cpu.$procmux$3414.
    dead port 5/12 on $pmux $flatten\cpu.$procmux$3414.
    dead port 6/12 on $pmux $flatten\cpu.$procmux$3414.
    dead port 7/12 on $pmux $flatten\cpu.$procmux$3414.
    dead port 8/12 on $pmux $flatten\cpu.$procmux$3414.
    dead port 10/12 on $pmux $flatten\cpu.$procmux$3414.
    dead port 4/12 on $pmux $flatten\cpu.$procmux$3597.
    dead port 5/12 on $pmux $flatten\cpu.$procmux$3597.
    dead port 6/12 on $pmux $flatten\cpu.$procmux$3597.
    dead port 7/12 on $pmux $flatten\cpu.$procmux$3597.
    dead port 8/12 on $pmux $flatten\cpu.$procmux$3597.
    dead port 10/12 on $pmux $flatten\cpu.$procmux$3597.
    dead port 1/9 on $pmux $flatten\cpu.$procmux$3650.
    dead port 2/9 on $pmux $flatten\cpu.$procmux$3650.
    dead port 3/9 on $pmux $flatten\cpu.$procmux$3650.
    dead port 4/9 on $pmux $flatten\cpu.$procmux$3650.
    dead port 5/9 on $pmux $flatten\cpu.$procmux$3650.
    dead port 7/9 on $pmux $flatten\cpu.$procmux$3650.
    dead port 1/5 on $pmux $flatten\cpu.$procmux$3756.
    dead port 2/5 on $pmux $flatten\cpu.$procmux$3756.
    dead port 2/2 on $mux $flatten\cpu.$procmux$3761.
    dead port 1/5 on $pmux $flatten\cpu.$procmux$3765.
    dead port 2/5 on $pmux $flatten\cpu.$procmux$3765.
    dead port 2/2 on $mux $flatten\cpu.$procmux$3770.
    dead port 1/8 on $pmux $flatten\cpu.$procmux$3785.
    dead port 2/8 on $pmux $flatten\cpu.$procmux$3785.
    dead port 2/2 on $mux $flatten\cpu.$procmux$4923.
    dead port 2/2 on $mux $flatten\cpu.$procmux$4930.
Removed 102 multiplexer ports.
<suppressed ~169 debug messages>

4.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$4966:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$flatten\bram_i.$procmux$4966_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$4966_Y [24]
      New connections: { $flatten\bram_i.$procmux$4966_Y [31:25] $flatten\bram_i.$procmux$4966_Y [23:0] } = { $flatten\bram_i.$procmux$4966_Y [24] $flatten\bram_i.$procmux$4966_Y [24] $flatten\bram_i.$procmux$4966_Y [24] $flatten\bram_i.$procmux$4966_Y [24] $flatten\bram_i.$procmux$4966_Y [24] $flatten\bram_i.$procmux$4966_Y [24] $flatten\bram_i.$procmux$4966_Y [24] 24'000000000000000000000000 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2624: { $flatten\cpu.$procmux$2339_CMP $auto$opt_reduce.cc:134:opt_pmux$5446 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$4984:
      Old ports: A=0, B=16711680, Y=$flatten\bram_i.$procmux$4984_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$4984_Y [16]
      New connections: { $flatten\bram_i.$procmux$4984_Y [31:17] $flatten\bram_i.$procmux$4984_Y [15:0] } = { 8'00000000 $flatten\bram_i.$procmux$4984_Y [16] $flatten\bram_i.$procmux$4984_Y [16] $flatten\bram_i.$procmux$4984_Y [16] $flatten\bram_i.$procmux$4984_Y [16] $flatten\bram_i.$procmux$4984_Y [16] $flatten\bram_i.$procmux$4984_Y [16] $flatten\bram_i.$procmux$4984_Y [16] 16'0000000000000000 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2637: { $auto$opt_reduce.cc:134:opt_pmux$5448 $flatten\cpu.$procmux$2317_CMP }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$5002:
      Old ports: A=0, B=65280, Y=$flatten\bram_i.$procmux$5002_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$5002_Y [8]
      New connections: { $flatten\bram_i.$procmux$5002_Y [31:9] $flatten\bram_i.$procmux$5002_Y [7:0] } = { 16'0000000000000000 $flatten\bram_i.$procmux$5002_Y [8] $flatten\bram_i.$procmux$5002_Y [8] $flatten\bram_i.$procmux$5002_Y [8] $flatten\bram_i.$procmux$5002_Y [8] $flatten\bram_i.$procmux$5002_Y [8] $flatten\bram_i.$procmux$5002_Y [8] $flatten\bram_i.$procmux$5002_Y [8] 8'00000000 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2650: { $flatten\cpu.$procmux$2366_CMP $auto$opt_reduce.cc:134:opt_pmux$5450 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$5020:
      Old ports: A=0, B=255, Y=$flatten\bram_i.$procmux$5020_Y
      New ports: A=1'0, B=1'1, Y=$flatten\bram_i.$procmux$5020_Y [0]
      New connections: $flatten\bram_i.$procmux$5020_Y [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$procmux$5020_Y [0] $flatten\bram_i.$procmux$5020_Y [0] $flatten\bram_i.$procmux$5020_Y [0] $flatten\bram_i.$procmux$5020_Y [0] $flatten\bram_i.$procmux$5020_Y [0] $flatten\bram_i.$procmux$5020_Y [0] $flatten\bram_i.$procmux$5020_Y [0] }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2868: { $flatten\cpu.$procmux$2366_CMP $flatten\cpu.$procmux$2627_CMP $flatten\cpu.$procmux$2317_CMP }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2928: { \cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_pmux$5452 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2970: { $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$procmux$2366_CMP }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3067: { $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$procmux$2366_CMP }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3110: { $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$procmux$2366_CMP $auto$opt_reduce.cc:134:opt_pmux$5454 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3216: { \cpu.instr_trap $flatten\cpu.$logic_and$picorv32.v:1696$1770_Y \cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_pmux$5456 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3388: { $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$procmux$2328_CMP $flatten\cpu.$procmux$2327_CMP $flatten\cpu.$procmux$2627_CMP }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3414: { $flatten\cpu.$logic_and$picorv32.v:1696$1770_Y $auto$opt_reduce.cc:134:opt_pmux$5460 $auto$opt_reduce.cc:134:opt_pmux$5458 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3597: { $auto$opt_reduce.cc:134:opt_pmux$5464 $auto$opt_reduce.cc:134:opt_pmux$5462 }
    Consolidated identical input bits for $mux cell $flatten\cpu.$procmux$3746:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675
      New ports: A=1'0, B=1'1, Y=$flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0]
      New connections: $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [31:1] = { $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] $flatten\cpu.$0$memwr$\cpuregs$picorv32.v:1344$1205_EN[31:0]$1675 [0] }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3756: $auto$opt_reduce.cc:134:opt_pmux$5466
    New ctrl vector for $pmux cell $flatten\uart_i.$procmux$5196: $auto$opt_reduce.cc:134:opt_pmux$5468
  Optimizing cells in module \soc_top.
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$5037:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:39$1149_EN[31:0]$1189, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162
      New ports: A=1'0, B=$flatten\bram_i.$procmux$4966_Y [24], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [31:25] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [23:0] } = { $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] $flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_EN[31:0]$1162 [24] 24'000000000000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$5046:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:38$1148_EN[31:0]$1186, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159
      New ports: A=1'0, B=$flatten\bram_i.$procmux$4984_Y [16], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [31:17] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [15:0] } = { 8'00000000 $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] $flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$5055:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:37$1147_EN[31:0]$1183, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156
      New ports: A=1'0, B=$flatten\bram_i.$procmux$5002_Y [8], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8]
      New connections: { $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [31:9] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [7:0] } = { 16'0000000000000000 $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] $flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\bram_i.$procmux$5064:
      Old ports: A=0, B=$flatten\bram_i.$2$memwr$\mem$bram.v:36$1146_EN[31:0]$1180, Y=$flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153
      New ports: A=1'0, B=$flatten\bram_i.$procmux$5020_Y [0], Y=$flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0]
      New connections: $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [31:1] = { 24'000000000000000000000000 $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] $flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_EN[31:0]$1153 [0] }
  Optimizing cells in module \soc_top.
Performed a total of 28 changes.

4.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

4.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 1 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 2 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 3 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 4 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 5 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 6 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 7 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 8 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 9 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 10 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 11 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 12 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 13 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 14 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 15 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 16 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 17 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 18 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 19 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 20 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 21 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 22 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 23 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 24 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 25 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 26 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 27 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 28 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 29 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 30 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 31 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 32 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 33 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 34 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 35 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 36 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 37 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 38 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 39 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 40 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 41 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 42 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 43 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 44 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 45 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 46 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 47 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 48 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 49 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 50 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 51 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 52 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 53 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 54 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 55 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 56 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 57 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 58 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 59 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 60 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 61 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 62 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 1-bit at position 63 on $flatten\cpu.$procdff$5246 ($dff) from module soc_top.
Setting constant 0-bit at position 0 on $flatten\cpu.$procdff$5289 ($dff) from module soc_top.

4.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 25 unused cells and 289 unused wires.
<suppressed ~33 debug messages>

4.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~2 debug messages>

4.10.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~163 debug messages>

4.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2738: $auto$opt_reduce.cc:134:opt_pmux$5470
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$2755: { $flatten\cpu.$procmux$2366_CMP $auto$opt_reduce.cc:134:opt_pmux$5472 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3175: { $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$procmux$2328_CMP $flatten\cpu.$procmux$2327_CMP $flatten\cpu.$procmux$2366_CMP $flatten\cpu.$procmux$2627_CMP $auto$opt_reduce.cc:134:opt_pmux$5474 }
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$4682: { $flatten\cpu.$logic_and$picorv32.v:380$1255_Y $auto$opt_reduce.cc:134:opt_pmux$5476 }
  Optimizing cells in module \soc_top.
Performed a total of 4 changes.

4.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.10.13. Executing OPT_DFF pass (perform DFF optimizations).

4.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

4.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.10.16. Rerunning OPT passes. (Maybe there is more to do..)

4.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~163 debug messages>

4.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.10.20. Executing OPT_DFF pass (perform DFF optimizations).

4.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.10.23. Finished OPT passes. (There is nothing left to do.)

4.11. Executing FSM pass (extract and optimize FSM).

4.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register soc_top.cpu.cpu_state.
Not marking soc_top.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register soc_top.cpu.mem_wordsize.

4.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\cpu.cpu_state' from module `\soc_top'.
  found $dff cell for state register: $flatten\cpu.$procdff$5272
  root of input selection tree: $flatten\cpu.$0\cpu_state[7:0]
  found reset state: 8'10000000 (guessed from mux tree)
  found ctrl input: $flatten\cpu.$logic_and$picorv32.v:1938$1849_Y
  found ctrl input: $flatten\cpu.$logic_and$picorv32.v:1922$1831_Y
  found ctrl input: \cpu.resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5470
  found ctrl input: $flatten\cpu.$procmux$2627_CMP
  found ctrl input: $flatten\cpu.$procmux$2366_CMP
  found ctrl input: $flatten\cpu.$procmux$2327_CMP
  found ctrl input: $flatten\cpu.$procmux$2328_CMP
  found ctrl input: $flatten\cpu.$eq$picorv32.v:1313$1661_Y
  found ctrl input: $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y
  found ctrl input: $flatten\cpu.$logic_and$picorv32.v:1872$1820_Y
  found ctrl input: $flatten\cpu.$eq$picorv32.v:1831$1798_Y
  found ctrl input: \cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \cpu.mem_done
  found ctrl input: \cpu.is_sll_srl_sra
  found ctrl input: \cpu.is_sb_sh_sw
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: $auto$opt_reduce.cc:134:opt_pmux$5456
  found ctrl input: \cpu.is_slli_srli_srai
  found ctrl input: $flatten\cpu.$logic_and$picorv32.v:1696$1770_Y
  found ctrl input: \cpu.instr_trap
  found state code: 8'00000001
  found state code: 8'10000000
  found ctrl input: \cpu.decoder_trigger
  found ctrl input: \cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $flatten\cpu.$logic_and$picorv32.v:1930$1841_Y
  found ctrl input: $flatten\cpu.$logic_and$picorv32.v:1923$1834_Y
  found ctrl output: $flatten\cpu.$procmux$2632_CMP
  found ctrl output: $flatten\cpu.$procmux$2627_CMP
  found ctrl output: $flatten\cpu.$procmux$2366_CMP
  found ctrl output: $flatten\cpu.$procmux$2339_CMP
  found ctrl output: $flatten\cpu.$procmux$2328_CMP
  found ctrl output: $flatten\cpu.$procmux$2327_CMP
  found ctrl output: $flatten\cpu.$procmux$2317_CMP
  found ctrl output: $flatten\cpu.$eq$picorv32.v:1313$1661_Y
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_pmux$5470 $auto$opt_reduce.cc:134:opt_pmux$5456 \cpu.resetn \cpu.mem_done \cpu.instr_jal \cpu.instr_trap \cpu.decoder_trigger \cpu.is_slli_srli_srai \cpu.is_sb_sh_sw \cpu.is_sll_srl_sra \cpu.is_beq_bne_blt_bge_bltu_bgeu $flatten\cpu.$logic_and$picorv32.v:1696$1770_Y $flatten\cpu.$eq$picorv32.v:1831$1798_Y $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y $flatten\cpu.$logic_and$picorv32.v:1872$1820_Y $flatten\cpu.$logic_and$picorv32.v:1922$1831_Y $flatten\cpu.$logic_and$picorv32.v:1923$1834_Y $flatten\cpu.$logic_and$picorv32.v:1930$1841_Y $flatten\cpu.$logic_and$picorv32.v:1938$1849_Y }
  ctrl outputs: { $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$0\cpu_state[7:0] $flatten\cpu.$procmux$2317_CMP $flatten\cpu.$procmux$2327_CMP $flatten\cpu.$procmux$2328_CMP $flatten\cpu.$procmux$2339_CMP $flatten\cpu.$procmux$2366_CMP $flatten\cpu.$procmux$2627_CMP $flatten\cpu.$procmux$2632_CMP }
  transition: 8'10000000 19'--0------------0--0 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 19'--1------------0--0 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 19'--0------------1000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 19'--1------------1000 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 19'---------------1100 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 19'---------------1-10 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 19'------------------1 -> 8'10000000 16'0100000000000001
  transition: 8'01000000 19'--0------------0--0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 19'--1---0--------0--0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 19'--1-0-1--------0--0 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 19'--1-1-1--------0--0 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 19'--0------------1000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 19'--1---0--------1000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 19'--1-0-1--------1000 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 19'--1-1-1--------1000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 19'---------------1100 -> 8'10000000 16'1100000000000000
  transition: 8'01000000 19'---------------1-10 -> 8'10000000 16'1100000000000000
  transition: 8'01000000 19'------------------1 -> 8'10000000 16'1100000000000000
  transition: 8'00100000 19'--0------------0--0 -> 8'01000000 16'0010000000010000
  transition: 8'00100000 19'-01--0-000-0---0--0 -> 8'00001000 16'0000010000010000
  transition: 8'00100000 19'-01--0-01--0---0--0 -> 8'00000010 16'0000000100010000
  transition: 8'00100000 19'-01--0-0-1-0---0--0 -> 8'00000100 16'0000001000010000
  transition: 8'00100000 19'--1--1---------0--0 -> 8'10000000 16'0100000000010000
  transition: 8'00100000 19'--1--------1---0--0 -> 8'00000001 16'0000000010010000
  transition: 8'00100000 19'--1----1-------0--0 -> 8'00000100 16'0000001000010000
  transition: 8'00100000 19'-11------------0--0 -> 8'00001000 16'0000010000010000
  transition: 8'00100000 19'--0------------1000 -> 8'01000000 16'0010000000010000
  transition: 8'00100000 19'-01--0-000-0---1000 -> 8'00001000 16'0000010000010000
  transition: 8'00100000 19'-01--0-01--0---1000 -> 8'00000010 16'0000000100010000
  transition: 8'00100000 19'-01--0-0-1-0---1000 -> 8'00000100 16'0000001000010000
  transition: 8'00100000 19'--1--1---------1000 -> 8'10000000 16'0100000000010000
  transition: 8'00100000 19'--1--------1---1000 -> 8'00000001 16'0000000010010000
  transition: 8'00100000 19'--1----1-------1000 -> 8'00000100 16'0000001000010000
  transition: 8'00100000 19'-11------------1000 -> 8'00001000 16'0000010000010000
  transition: 8'00100000 19'---------------1100 -> 8'10000000 16'0100000000010000
  transition: 8'00100000 19'---------------1-10 -> 8'10000000 16'0100000000010000
  transition: 8'00100000 19'------------------1 -> 8'10000000 16'0100000000010000
  transition: 8'00001000 19'--0------------0--0 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 19'--1-------0----0--0 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 19'--10------1----0--0 -> 8'00001000 16'0000010000000100
  transition: 8'00001000 19'--11------1----0--0 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 19'--0------------1000 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 19'--1-------0----1000 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 19'--10------1----1000 -> 8'00001000 16'0000010000000100
  transition: 8'00001000 19'--11------1----1000 -> 8'01000000 16'0010000000000100
  transition: 8'00001000 19'---------------1100 -> 8'10000000 16'0100000000000100
  transition: 8'00001000 19'---------------1-10 -> 8'10000000 16'0100000000000100
  transition: 8'00001000 19'------------------1 -> 8'10000000 16'0100000000000100
  transition: 8'00000100 19'--0------------0--0 -> 8'01000000 16'0010000000000010
  transition: 8'00000100 19'--1---------0--0--0 -> 8'00000100 16'0000001000000010
  transition: 8'00000100 19'--1---------1--0--0 -> 8'01000000 16'0010000000000010
  transition: 8'00000100 19'--0------------1000 -> 8'01000000 16'0010000000000010
  transition: 8'00000100 19'--1---------0--1000 -> 8'00000100 16'0000001000000010
  transition: 8'00000100 19'--1---------1--1000 -> 8'01000000 16'0010000000000010
  transition: 8'00000100 19'---------------1100 -> 8'10000000 16'0100000000000010
  transition: 8'00000100 19'---------------1-10 -> 8'10000000 16'0100000000000010
  transition: 8'00000100 19'------------------1 -> 8'10000000 16'0100000000000010
  transition: 8'00000010 19'--0------------0--0 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 19'--1----------0-0--0 -> 8'00000010 16'0000000100001000
  transition: 8'00000010 19'--1----------100--0 -> 8'00000010 16'0000000100001000
  transition: 8'00000010 19'--1----------110--0 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 19'--0------------1000 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 19'--1----------0-1000 -> 8'00000010 16'0000000100001000
  transition: 8'00000010 19'--1----------101000 -> 8'00000010 16'0000000100001000
  transition: 8'00000010 19'--1----------111000 -> 8'01000000 16'0010000000001000
  transition: 8'00000010 19'---------------1100 -> 8'10000000 16'0100000000001000
  transition: 8'00000010 19'---------------1-10 -> 8'10000000 16'0100000000001000
  transition: 8'00000010 19'------------------1 -> 8'10000000 16'0100000000001000
  transition: 8'00000001 19'--0------------0--0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 19'--1----------0-0--0 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 19'--1----------100--0 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 19'--1----------110--0 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 19'--0------------1000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 19'--1----------0-1000 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 19'--1----------101000 -> 8'00000001 16'0000000011000000
  transition: 8'00000001 19'--1----------111000 -> 8'01000000 16'0010000001000000
  transition: 8'00000001 19'---------------1100 -> 8'10000000 16'0100000001000000
  transition: 8'00000001 19'---------------1-10 -> 8'10000000 16'0100000001000000
  transition: 8'00000001 19'------------------1 -> 8'10000000 16'0100000001000000
Extracting FSM `\cpu.mem_wordsize' from module `\soc_top'.
  found $dff cell for state register: $flatten\cpu.$procdff$5259
  root of input selection tree: $flatten\cpu.$0\mem_wordsize[1:0]
  found ctrl input: \cpu.resetn
  found ctrl input: $flatten\cpu.$procmux$2317_CMP
  found ctrl input: $flatten\cpu.$procmux$2339_CMP
  found ctrl input: $flatten\cpu.$eq$picorv32.v:1313$1661_Y
  found ctrl input: $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y
  found ctrl input: \cpu.mem_do_rdata
  found ctrl input: \cpu.instr_lw
  found ctrl input: $flatten\cpu.$logic_or$picorv32.v:1887$1825_Y
  found ctrl input: $flatten\cpu.$logic_or$picorv32.v:1886$1824_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \cpu.mem_do_wdata
  found ctrl input: \cpu.instr_sw
  found ctrl input: \cpu.instr_sh
  found ctrl input: \cpu.instr_sb
  found ctrl output: $flatten\cpu.$eq$picorv32.v:1930$1839_Y
  found ctrl output: $flatten\cpu.$eq$picorv32.v:1923$1832_Y
  found ctrl output: $flatten\cpu.$procmux$4924_CMP
  ctrl inputs: { \cpu.resetn \cpu.mem_do_rdata \cpu.mem_do_wdata \cpu.instr_lw \cpu.instr_sb \cpu.instr_sh \cpu.instr_sw $flatten\cpu.$eq$picorv32.v:1313$1661_Y $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y $flatten\cpu.$logic_or$picorv32.v:1886$1824_Y $flatten\cpu.$logic_or$picorv32.v:1887$1825_Y $flatten\cpu.$procmux$2317_CMP $flatten\cpu.$procmux$2339_CMP }
  ctrl outputs: { $flatten\cpu.$0\mem_wordsize[1:0] $flatten\cpu.$eq$picorv32.v:1923$1832_Y $flatten\cpu.$eq$picorv32.v:1930$1839_Y $flatten\cpu.$procmux$4924_CMP }
  transition:       2'00 13'0------------ ->       2'00 5'00100
  transition:       2'00 13'1------0---00 ->       2'00 5'00100
  transition:       2'00 13'1------1----- ->       2'00 5'00100
  transition:       2'00 13'1-------0---1 ->       2'00 5'00100
  transition:       2'00 13'1-0-000-1---1 ->       2'00 5'00100
  transition:       2'00 13'1-0-1---1---1 ->       2'10 5'10100
  transition:       2'00 13'1-0--1--1---1 ->       2'01 5'01100
  transition:       2'00 13'1-0---1-1---1 ->       2'00 5'00100
  transition:       2'00 13'1-1-----1---1 ->       2'00 5'00100
  transition:       2'00 13'1-------0--1- ->       2'00 5'00100
  transition:       2'00 13'10-0----1001- ->       2'00 5'00100
  transition:       2'00 13'10------11-1- ->       2'10 5'10100
  transition:       2'00 13'10------1-11- ->       2'01 5'01100
  transition:       2'00 13'10-1----1--1- ->       2'00 5'00100
  transition:       2'00 13'11------1--1- ->       2'00 5'00100
  transition:       2'10 13'0------------ ->       2'10 5'10001
  transition:       2'10 13'1------0---00 ->       2'10 5'10001
  transition:       2'10 13'1------1----- ->       2'00 5'00001
  transition:       2'10 13'1-------0---1 ->       2'10 5'10001
  transition:       2'10 13'1-0-000-1---1 ->       2'10 5'10001
  transition:       2'10 13'1-0-1---1---1 ->       2'10 5'10001
  transition:       2'10 13'1-0--1--1---1 ->       2'01 5'01001
  transition:       2'10 13'1-0---1-1---1 ->       2'00 5'00001
  transition:       2'10 13'1-1-----1---1 ->       2'10 5'10001
  transition:       2'10 13'1-------0--1- ->       2'10 5'10001
  transition:       2'10 13'10-0----1001- ->       2'10 5'10001
  transition:       2'10 13'10------11-1- ->       2'10 5'10001
  transition:       2'10 13'10------1-11- ->       2'01 5'01001
  transition:       2'10 13'10-1----1--1- ->       2'00 5'00001
  transition:       2'10 13'11------1--1- ->       2'10 5'10001
  transition:       2'01 13'0------------ ->       2'01 5'01010
  transition:       2'01 13'1------0---00 ->       2'01 5'01010
  transition:       2'01 13'1------1----- ->       2'00 5'00010
  transition:       2'01 13'1-------0---1 ->       2'01 5'01010
  transition:       2'01 13'1-0-000-1---1 ->       2'01 5'01010
  transition:       2'01 13'1-0-1---1---1 ->       2'10 5'10010
  transition:       2'01 13'1-0--1--1---1 ->       2'01 5'01010
  transition:       2'01 13'1-0---1-1---1 ->       2'00 5'00010
  transition:       2'01 13'1-1-----1---1 ->       2'01 5'01010
  transition:       2'01 13'1-------0--1- ->       2'01 5'01010
  transition:       2'01 13'10-0----1001- ->       2'01 5'01010
  transition:       2'01 13'10------11-1- ->       2'10 5'10010
  transition:       2'01 13'10------1-11- ->       2'01 5'01010
  transition:       2'01 13'10-1----1--1- ->       2'00 5'00010
  transition:       2'01 13'11------1--1- ->       2'01 5'01010

4.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu.mem_wordsize$5487' from module `\soc_top'.
Optimizing FSM `$fsm$\cpu.cpu_state$5477' from module `\soc_top'.
  Removing unused input signal $auto$opt_reduce.cc:134:opt_pmux$5470.

4.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 36 unused cells and 36 unused wires.
<suppressed ~37 debug messages>

4.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\cpu.cpu_state$5477' from module `\soc_top'.
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $flatten\cpu.$0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\cpu.mem_wordsize$5487' from module `\soc_top'.
  Removing unused output signal $flatten\cpu.$0\mem_wordsize[1:0] [0].
  Removing unused output signal $flatten\cpu.$0\mem_wordsize[1:0] [1].

4.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\cpu.cpu_state$5477' from module `\soc_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\cpu.mem_wordsize$5487' from module `\soc_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

4.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\cpu.cpu_state$5477' from module `soc_top':
-------------------------------------

  Information on FSM $fsm$\cpu.cpu_state$5477 (\cpu.cpu_state):

  Number of input signals:   18
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: $flatten\cpu.$logic_and$picorv32.v:1938$1849_Y
    1: $flatten\cpu.$logic_and$picorv32.v:1930$1841_Y
    2: $flatten\cpu.$logic_and$picorv32.v:1923$1834_Y
    3: $flatten\cpu.$logic_and$picorv32.v:1922$1831_Y
    4: $flatten\cpu.$logic_and$picorv32.v:1872$1820_Y
    5: $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y
    6: $flatten\cpu.$eq$picorv32.v:1831$1798_Y
    7: $flatten\cpu.$logic_and$picorv32.v:1696$1770_Y
    8: \cpu.is_beq_bne_blt_bge_bltu_bgeu
    9: \cpu.is_sll_srl_sra
   10: \cpu.is_sb_sh_sw
   11: \cpu.is_slli_srli_srai
   12: \cpu.decoder_trigger
   13: \cpu.instr_trap
   14: \cpu.instr_jal
   15: \cpu.mem_done
   16: \cpu.resetn
   17: $auto$opt_reduce.cc:134:opt_pmux$5456

  Output signals:
    0: $flatten\cpu.$procmux$2632_CMP
    1: $flatten\cpu.$procmux$2627_CMP
    2: $flatten\cpu.$procmux$2366_CMP
    3: $flatten\cpu.$procmux$2339_CMP
    4: $flatten\cpu.$procmux$2328_CMP
    5: $flatten\cpu.$procmux$2327_CMP
    6: $flatten\cpu.$procmux$2317_CMP
    7: $flatten\cpu.$eq$picorv32.v:1313$1661_Y

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 18'-1------------1000   ->     0 8'00000001
      1:     0 18'--------------1100   ->     0 8'00000001
      2:     0 18'--------------1-10   ->     0 8'00000001
      3:     0 18'-1------------0--0   ->     0 8'00000001
      4:     0 18'-----------------1   ->     0 8'00000001
      5:     0 18'-0------------1000   ->     1 8'00000001
      6:     0 18'-0------------0--0   ->     1 8'00000001
      7:     1 18'--------------1100   ->     0 8'10000000
      8:     1 18'--------------1-10   ->     0 8'10000000
      9:     1 18'-----------------1   ->     0 8'10000000
     10:     1 18'-1---0--------1000   ->     1 8'10000000
     11:     1 18'-1-1-1--------1000   ->     1 8'10000000
     12:     1 18'-0------------1000   ->     1 8'10000000
     13:     1 18'-1---0--------0--0   ->     1 8'10000000
     14:     1 18'-1-1-1--------0--0   ->     1 8'10000000
     15:     1 18'-0------------0--0   ->     1 8'10000000
     16:     1 18'-1-0-1--------1000   ->     2 8'10000000
     17:     1 18'-1-0-1--------0--0   ->     2 8'10000000
     18:     2 18'-1--1---------1000   ->     0 8'00010000
     19:     2 18'--------------1100   ->     0 8'00010000
     20:     2 18'--------------1-10   ->     0 8'00010000
     21:     2 18'-1--1---------0--0   ->     0 8'00010000
     22:     2 18'-----------------1   ->     0 8'00010000
     23:     2 18'-0------------1000   ->     1 8'00010000
     24:     2 18'-0------------0--0   ->     1 8'00010000
     25:     2 18'01--0-000-0---1000   ->     3 8'00010000
     26:     2 18'11------------1000   ->     3 8'00010000
     27:     2 18'01--0-000-0---0--0   ->     3 8'00010000
     28:     2 18'11------------0--0   ->     3 8'00010000
     29:     2 18'01--0-0-1-0---1000   ->     4 8'00010000
     30:     2 18'-1----1-------1000   ->     4 8'00010000
     31:     2 18'01--0-0-1-0---0--0   ->     4 8'00010000
     32:     2 18'-1----1-------0--0   ->     4 8'00010000
     33:     2 18'01--0-01--0---1000   ->     5 8'00010000
     34:     2 18'01--0-01--0---0--0   ->     5 8'00010000
     35:     2 18'-1--------1---1000   ->     6 8'00010000
     36:     2 18'-1--------1---0--0   ->     6 8'00010000
     37:     3 18'--------------1100   ->     0 8'00000100
     38:     3 18'--------------1-10   ->     0 8'00000100
     39:     3 18'-----------------1   ->     0 8'00000100
     40:     3 18'-1-------0----1000   ->     1 8'00000100
     41:     3 18'-11------1----1000   ->     1 8'00000100
     42:     3 18'-0------------1000   ->     1 8'00000100
     43:     3 18'-1-------0----0--0   ->     1 8'00000100
     44:     3 18'-11------1----0--0   ->     1 8'00000100
     45:     3 18'-0------------0--0   ->     1 8'00000100
     46:     3 18'-10------1----1000   ->     3 8'00000100
     47:     3 18'-10------1----0--0   ->     3 8'00000100
     48:     4 18'--------------1100   ->     0 8'00000010
     49:     4 18'--------------1-10   ->     0 8'00000010
     50:     4 18'-----------------1   ->     0 8'00000010
     51:     4 18'-1---------1--1000   ->     1 8'00000010
     52:     4 18'-0------------1000   ->     1 8'00000010
     53:     4 18'-1---------1--0--0   ->     1 8'00000010
     54:     4 18'-0------------0--0   ->     1 8'00000010
     55:     4 18'-1---------0--1000   ->     4 8'00000010
     56:     4 18'-1---------0--0--0   ->     4 8'00000010
     57:     5 18'--------------1100   ->     0 8'00001000
     58:     5 18'--------------1-10   ->     0 8'00001000
     59:     5 18'-----------------1   ->     0 8'00001000
     60:     5 18'-1----------111000   ->     1 8'00001000
     61:     5 18'-0------------1000   ->     1 8'00001000
     62:     5 18'-1----------110--0   ->     1 8'00001000
     63:     5 18'-0------------0--0   ->     1 8'00001000
     64:     5 18'-1----------101000   ->     5 8'00001000
     65:     5 18'-1----------0-1000   ->     5 8'00001000
     66:     5 18'-1----------100--0   ->     5 8'00001000
     67:     5 18'-1----------0-0--0   ->     5 8'00001000
     68:     6 18'--------------1100   ->     0 8'01000000
     69:     6 18'--------------1-10   ->     0 8'01000000
     70:     6 18'-----------------1   ->     0 8'01000000
     71:     6 18'-1----------111000   ->     1 8'01000000
     72:     6 18'-0------------1000   ->     1 8'01000000
     73:     6 18'-1----------110--0   ->     1 8'01000000
     74:     6 18'-0------------0--0   ->     1 8'01000000
     75:     6 18'-1----------101000   ->     6 8'01000000
     76:     6 18'-1----------0-1000   ->     6 8'01000000
     77:     6 18'-1----------100--0   ->     6 8'01000000
     78:     6 18'-1----------0-0--0   ->     6 8'01000000

-------------------------------------

FSM `$fsm$\cpu.mem_wordsize$5487' from module `soc_top':
-------------------------------------

  Information on FSM $fsm$\cpu.mem_wordsize$5487 (\cpu.mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: $flatten\cpu.$procmux$2339_CMP
    1: $flatten\cpu.$procmux$2317_CMP
    2: $flatten\cpu.$logic_or$picorv32.v:1887$1825_Y
    3: $flatten\cpu.$logic_or$picorv32.v:1886$1824_Y
    4: $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y
    5: $flatten\cpu.$eq$picorv32.v:1313$1661_Y
    6: \cpu.instr_sw
    7: \cpu.instr_sh
    8: \cpu.instr_sb
    9: \cpu.instr_lw
   10: \cpu.mem_do_wdata
   11: \cpu.mem_do_rdata
   12: \cpu.resetn

  Output signals:
    0: $flatten\cpu.$procmux$4924_CMP
    1: $flatten\cpu.$eq$picorv32.v:1930$1839_Y
    2: $flatten\cpu.$eq$picorv32.v:1923$1832_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'1------0---00   ->     0 3'100
      1:     0 13'1-------0---1   ->     0 3'100
      2:     0 13'1-0-000-1---1   ->     0 3'100
      3:     0 13'1-0---1-1---1   ->     0 3'100
      4:     0 13'1-1-----1---1   ->     0 3'100
      5:     0 13'10-0----1001-   ->     0 3'100
      6:     0 13'1-------0--1-   ->     0 3'100
      7:     0 13'10-1----1--1-   ->     0 3'100
      8:     0 13'11------1--1-   ->     0 3'100
      9:     0 13'1------1-----   ->     0 3'100
     10:     0 13'0------------   ->     0 3'100
     11:     0 13'1-0-1---1---1   ->     1 3'100
     12:     0 13'10------11-1-   ->     1 3'100
     13:     0 13'1-0--1--1---1   ->     2 3'100
     14:     0 13'10------1-11-   ->     2 3'100
     15:     1 13'1-0---1-1---1   ->     0 3'001
     16:     1 13'10-1----1--1-   ->     0 3'001
     17:     1 13'1------1-----   ->     0 3'001
     18:     1 13'1------0---00   ->     1 3'001
     19:     1 13'1-------0---1   ->     1 3'001
     20:     1 13'1-0-000-1---1   ->     1 3'001
     21:     1 13'1-0-1---1---1   ->     1 3'001
     22:     1 13'1-1-----1---1   ->     1 3'001
     23:     1 13'10-0----1001-   ->     1 3'001
     24:     1 13'10------11-1-   ->     1 3'001
     25:     1 13'1-------0--1-   ->     1 3'001
     26:     1 13'11------1--1-   ->     1 3'001
     27:     1 13'0------------   ->     1 3'001
     28:     1 13'1-0--1--1---1   ->     2 3'001
     29:     1 13'10------1-11-   ->     2 3'001
     30:     2 13'1-0---1-1---1   ->     0 3'010
     31:     2 13'10-1----1--1-   ->     0 3'010
     32:     2 13'1------1-----   ->     0 3'010
     33:     2 13'1-0-1---1---1   ->     1 3'010
     34:     2 13'10------11-1-   ->     1 3'010
     35:     2 13'1------0---00   ->     2 3'010
     36:     2 13'1-------0---1   ->     2 3'010
     37:     2 13'1-0-000-1---1   ->     2 3'010
     38:     2 13'1-0--1--1---1   ->     2 3'010
     39:     2 13'1-1-----1---1   ->     2 3'010
     40:     2 13'10-0----1001-   ->     2 3'010
     41:     2 13'10------1-11-   ->     2 3'010
     42:     2 13'1-------0--1-   ->     2 3'010
     43:     2 13'11------1--1-   ->     2 3'010
     44:     2 13'0------------   ->     2 3'010

-------------------------------------

4.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\cpu.cpu_state$5477' from module `\soc_top'.
Mapping FSM `$fsm$\cpu.mem_wordsize$5487' from module `\soc_top'.

4.12. Executing OPT pass (performing simple optimizations).

4.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~5 debug messages>

4.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

4.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/4 on $pmux $flatten\cpu.$procmux$2924.
    dead port 2/5 on $pmux $flatten\cpu.$procmux$3388.
    dead port 1/3 on $pmux $flatten\cpu.$procmux$3594.
Removed 3 multiplexer ports.
<suppressed ~159 debug messages>

4.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5449: { \cpu.cpu_state [6:4] \cpu.cpu_state [2:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5447: \cpu.cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$5445: { \cpu.cpu_state [6] \cpu.cpu_state [4:0] }
  Optimizing cells in module \soc_top.
Performed a total of 3 changes.

4.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$5239 ($dff) from module soc_top (D = $procmux$2253_Y, Q = \debug_led_reg, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$5802 ($sdff) from module soc_top (D = \cpu.mem_wdata [7:0], Q = \debug_led_reg).
Adding SRST signal on $flatten\uart_i.$procdff$5439 ($dff) from module soc_top (D = { $flatten\uart_i.$procmux$5219_Y $flatten\uart_i.$procmux$5224_Y $flatten\uart_i.$procmux$5229_Y $flatten\uart_i.$procmux$5234_Y }, Q = \uart_i.cfg_divider, rval = 104).
Adding EN signal on $auto$ff.cc:266:slice$5804 ($sdff) from module soc_top (D = \cpu.mem_wdata [7:0], Q = \uart_i.cfg_divider [7:0]).
Adding EN signal on $auto$ff.cc:266:slice$5804 ($sdff) from module soc_top (D = \cpu.mem_wdata [15:8], Q = \uart_i.cfg_divider [15:8]).
Adding EN signal on $auto$ff.cc:266:slice$5804 ($sdff) from module soc_top (D = \cpu.mem_wdata [23:16], Q = \uart_i.cfg_divider [23:16]).
Adding EN signal on $auto$ff.cc:266:slice$5804 ($sdff) from module soc_top (D = \cpu.mem_wdata [31:24], Q = \uart_i.cfg_divider [31:24]).
Adding SRST signal on $flatten\uart_i.$procdff$5438 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5180_Y, Q = \uart_i.recv_buf_valid, rval = 1'0).
Adding SRST signal on $flatten\uart_i.$procdff$5437 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5188_Y, Q = \uart_i.recv_buf_data, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$5810 ($sdff) from module soc_top (D = \uart_i.recv_pattern, Q = \uart_i.recv_buf_data).
Adding SRST signal on $flatten\uart_i.$procdff$5436 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5196_Y, Q = \uart_i.recv_pattern, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:266:slice$5814 ($sdff) from module soc_top (D = { 1'1 \uart_i.recv_pattern [7:1] }, Q = \uart_i.recv_pattern).
Adding SRST signal on $flatten\uart_i.$procdff$5435 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5166_Y, Q = \uart_i.recv_divcnt, rval = 0).
Adding SRST signal on $flatten\uart_i.$procdff$5434 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5208_Y, Q = \uart_i.recv_state, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5821 ($sdff) from module soc_top (D = $flatten\uart_i.$procmux$5208_Y, Q = \uart_i.recv_state).
Adding SRST signal on $flatten\uart_i.$procdff$5433 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5136_Y, Q = \uart_i.send_dummy, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$5833 ($sdff) from module soc_top (D = $flatten\uart_i.$procmux$5136_Y, Q = \uart_i.send_dummy).
Adding SRST signal on $flatten\uart_i.$procdff$5432 ($dff) from module soc_top (D = $flatten\uart_i.$add$simpleuart.v:112$1137_Y, Q = \uart_i.send_divcnt, rval = 0).
Adding SRST signal on $flatten\uart_i.$procdff$5431 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5147_Y, Q = \uart_i.send_bitcnt, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$5842 ($sdff) from module soc_top (D = $flatten\uart_i.$procmux$5147_Y, Q = \uart_i.send_bitcnt).
Adding SRST signal on $flatten\uart_i.$procdff$5430 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5152_Y [9], Q = \uart_i.send_pattern [9], rval = 1'1).
Adding SRST signal on $flatten\uart_i.$procdff$5430 ($dff) from module soc_top (D = $flatten\uart_i.$procmux$5155_Y [8:0], Q = \uart_i.send_pattern [8:0], rval = 9'111111111).
Adding EN signal on $auto$ff.cc:266:slice$5851 ($sdff) from module soc_top (D = $flatten\uart_i.$procmux$5155_Y [8:0], Q = \uart_i.send_pattern [8:0]).
Adding EN signal on $auto$ff.cc:266:slice$5846 ($sdff) from module soc_top (D = 1'1, Q = \uart_i.send_pattern [9]).
Adding EN signal on $flatten\cpu.$procdff$5393 ($dff) from module soc_top (D = \cpu.mem_rdata, Q = \cpu.mem_rdata_q).
Adding EN signal on $flatten\cpu.$procdff$5388 ($dff) from module soc_top (D = $flatten\cpu.$0\mem_state[1:0], Q = \cpu.mem_state).
Adding EN signal on $flatten\cpu.$procdff$5387 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4652_Y, Q = \cpu.mem_wstrb).
Adding EN signal on $flatten\cpu.$procdff$5386 ($dff) from module soc_top (D = \cpu.mem_la_wdata, Q = \cpu.mem_wdata).
Adding EN signal on $flatten\cpu.$procdff$5385 ($dff) from module soc_top (D = \cpu.mem_la_addr, Q = \cpu.mem_addr).
Adding EN signal on $flatten\cpu.$procdff$5383 ($dff) from module soc_top (D = $flatten\cpu.$0\mem_valid[0:0], Q = \cpu.mem_valid).
Adding SRST signal on $flatten\cpu.$procdff$5367 ($dff) from module soc_top (D = $flatten\cpu.$reduce_or$picorv32.v:864$1363_Y, Q = \cpu.is_compare, rval = 1'0).
Adding EN signal on $flatten\cpu.$procdff$5366 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:878$1383_Y, Q = \cpu.is_alu_reg_reg).
Adding EN signal on $flatten\cpu.$procdff$5365 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:877$1382_Y, Q = \cpu.is_alu_reg_imm).
Adding SRST signal on $flatten\cpu.$procdff$5363 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4026_Y, Q = \cpu.is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5905 ($sdff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:874$1379_Y, Q = \cpu.is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $flatten\cpu.$procdff$5360 ($dff) from module soc_top (D = $flatten\cpu.$reduce_or$picorv32.v:860$1359_Y, Q = \cpu.is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $flatten\cpu.$procdff$5359 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1110$1615_Y, Q = \cpu.is_sll_srl_sra).
Adding EN signal on $flatten\cpu.$procdff$5358 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:876$1381_Y, Q = \cpu.is_sb_sh_sw).
Adding EN signal on $flatten\cpu.$procdff$5357 ($dff) from module soc_top (D = $flatten\cpu.$logic_or$picorv32.v:1101$1604_Y, Q = \cpu.is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $flatten\cpu.$procdff$5356 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1095$1595_Y, Q = \cpu.is_slli_srli_srai).
Adding EN signal on $flatten\cpu.$procdff$5355 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:875$1380_Y, Q = \cpu.is_lb_lh_lw_lbu_lhu).
Adding EN signal on $flatten\cpu.$procdff$5353 ($dff) from module soc_top (D = 1'0, Q = \cpu.compressed_instr).
Adding EN signal on $flatten\cpu.$procdff$5352 ($dff) from module soc_top (D = { \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [31] \cpu.mem_rdata_latched [19:12] \cpu.mem_rdata_latched [20] \cpu.mem_rdata_latched [30:21] 1'0 }, Q = \cpu.decoded_imm_j).
Adding EN signal on $flatten\cpu.$procdff$5351 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4072_Y, Q = \cpu.decoded_imm).
Adding EN signal on $flatten\cpu.$procdff$5350 ($dff) from module soc_top (D = \cpu.mem_rdata_latched [24:20], Q = \cpu.decoded_rs2).
Adding EN signal on $flatten\cpu.$procdff$5349 ($dff) from module soc_top (D = \cpu.mem_rdata_latched [19:15], Q = \cpu.decoded_rs1).
Adding EN signal on $flatten\cpu.$procdff$5348 ($dff) from module soc_top (D = \cpu.mem_rdata_latched [11:7], Q = \cpu.decoded_rd).
Adding EN signal on $flatten\cpu.$procdff$5347 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_timer).
Adding EN signal on $flatten\cpu.$procdff$5346 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_waitirq).
Adding EN signal on $flatten\cpu.$procdff$5345 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_maskirq).
Adding EN signal on $flatten\cpu.$procdff$5344 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_retirq).
Adding EN signal on $flatten\cpu.$procdff$5343 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_setq).
Adding EN signal on $flatten\cpu.$procdff$5342 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_getq).
Adding SRST signal on $flatten\cpu.$procdff$5341 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4172_Y, Q = \cpu.instr_fence, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5925 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1088$1565_Y, Q = \cpu.instr_fence).
Adding EN signal on $flatten\cpu.$procdff$5339 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_rdinstrh).
Adding EN signal on $flatten\cpu.$procdff$5338 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_rdinstr).
Adding EN signal on $flatten\cpu.$procdff$5337 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_rdcycleh).
Adding EN signal on $flatten\cpu.$procdff$5336 ($dff) from module soc_top (D = 1'0, Q = \cpu.instr_rdcycle).
Adding SRST signal on $flatten\cpu.$procdff$5335 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4186_Y, Q = \cpu.instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5931 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1077$1528_Y, Q = \cpu.instr_and).
Adding SRST signal on $flatten\cpu.$procdff$5334 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4190_Y, Q = \cpu.instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5933 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1076$1524_Y, Q = \cpu.instr_or).
Adding SRST signal on $flatten\cpu.$procdff$5333 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4194_Y, Q = \cpu.instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5935 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1075$1520_Y, Q = \cpu.instr_sra).
Adding SRST signal on $flatten\cpu.$procdff$5332 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4198_Y, Q = \cpu.instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5937 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1074$1516_Y, Q = \cpu.instr_srl).
Adding SRST signal on $flatten\cpu.$procdff$5331 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4202_Y, Q = \cpu.instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5939 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1073$1512_Y, Q = \cpu.instr_xor).
Adding SRST signal on $flatten\cpu.$procdff$5330 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4206_Y, Q = \cpu.instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5941 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1072$1508_Y, Q = \cpu.instr_sltu).
Adding SRST signal on $flatten\cpu.$procdff$5329 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4210_Y, Q = \cpu.instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5943 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1071$1504_Y, Q = \cpu.instr_slt).
Adding SRST signal on $flatten\cpu.$procdff$5328 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4214_Y, Q = \cpu.instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5945 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1070$1500_Y, Q = \cpu.instr_sll).
Adding SRST signal on $flatten\cpu.$procdff$5327 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4218_Y, Q = \cpu.instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5947 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1069$1496_Y, Q = \cpu.instr_sub).
Adding SRST signal on $flatten\cpu.$procdff$5326 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4222_Y, Q = \cpu.instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5949 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1068$1492_Y, Q = \cpu.instr_add).
Adding EN signal on $flatten\cpu.$procdff$5325 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1066$1488_Y, Q = \cpu.instr_srai).
Adding EN signal on $flatten\cpu.$procdff$5324 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1065$1484_Y, Q = \cpu.instr_srli).
Adding EN signal on $flatten\cpu.$procdff$5323 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1064$1480_Y, Q = \cpu.instr_slli).
Adding SRST signal on $flatten\cpu.$procdff$5322 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4232_Y, Q = \cpu.instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5954 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1062$1476_Y, Q = \cpu.instr_andi).
Adding SRST signal on $flatten\cpu.$procdff$5321 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4236_Y, Q = \cpu.instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5956 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1061$1474_Y, Q = \cpu.instr_ori).
Adding SRST signal on $flatten\cpu.$procdff$5320 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4240_Y, Q = \cpu.instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5958 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1060$1472_Y, Q = \cpu.instr_xori).
Adding SRST signal on $flatten\cpu.$procdff$5319 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4244_Y, Q = \cpu.instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5960 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1059$1470_Y, Q = \cpu.instr_sltiu).
Adding SRST signal on $flatten\cpu.$procdff$5318 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4248_Y, Q = \cpu.instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5962 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1058$1468_Y, Q = \cpu.instr_slti).
Adding SRST signal on $flatten\cpu.$procdff$5317 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4252_Y, Q = \cpu.instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5964 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1057$1466_Y, Q = \cpu.instr_addi).
Adding EN signal on $flatten\cpu.$procdff$5316 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1055$1464_Y, Q = \cpu.instr_sw).
Adding EN signal on $flatten\cpu.$procdff$5315 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1054$1462_Y, Q = \cpu.instr_sh).
Adding EN signal on $flatten\cpu.$procdff$5314 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1053$1460_Y, Q = \cpu.instr_sb).
Adding EN signal on $flatten\cpu.$procdff$5313 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1051$1458_Y, Q = \cpu.instr_lhu).
Adding EN signal on $flatten\cpu.$procdff$5312 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1050$1456_Y, Q = \cpu.instr_lbu).
Adding EN signal on $flatten\cpu.$procdff$5311 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1049$1454_Y, Q = \cpu.instr_lw).
Adding EN signal on $flatten\cpu.$procdff$5310 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1048$1452_Y, Q = \cpu.instr_lh).
Adding EN signal on $flatten\cpu.$procdff$5309 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1047$1450_Y, Q = \cpu.instr_lb).
Adding SRST signal on $flatten\cpu.$procdff$5308 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4272_Y, Q = \cpu.instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5974 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1045$1448_Y, Q = \cpu.instr_bgeu).
Adding SRST signal on $flatten\cpu.$procdff$5307 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4276_Y, Q = \cpu.instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5976 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1044$1446_Y, Q = \cpu.instr_bltu).
Adding SRST signal on $flatten\cpu.$procdff$5306 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4280_Y, Q = \cpu.instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5978 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1043$1444_Y, Q = \cpu.instr_bge).
Adding SRST signal on $flatten\cpu.$procdff$5305 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4284_Y, Q = \cpu.instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5980 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1042$1442_Y, Q = \cpu.instr_blt).
Adding SRST signal on $flatten\cpu.$procdff$5304 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4288_Y, Q = \cpu.instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5982 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1041$1440_Y, Q = \cpu.instr_bne).
Adding SRST signal on $flatten\cpu.$procdff$5303 ($dff) from module soc_top (D = $flatten\cpu.$procmux$4292_Y, Q = \cpu.instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5984 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1040$1438_Y, Q = \cpu.instr_beq).
Adding EN signal on $flatten\cpu.$procdff$5302 ($dff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:870$1370_Y, Q = \cpu.instr_jalr).
Adding EN signal on $flatten\cpu.$procdff$5301 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:869$1367_Y, Q = \cpu.instr_jal).
Adding EN signal on $flatten\cpu.$procdff$5300 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:868$1366_Y, Q = \cpu.instr_auipc).
Adding EN signal on $flatten\cpu.$procdff$5299 ($dff) from module soc_top (D = $flatten\cpu.$eq$picorv32.v:867$1365_Y, Q = \cpu.instr_lui).
Adding SRST signal on $flatten\cpu.$procdff$5285 ($dff) from module soc_top (D = $flatten\cpu.$procmux$2970_Y, Q = \cpu.latched_rd, rval = 5'00010).
Adding EN signal on $auto$ff.cc:266:slice$5990 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$2970_Y, Q = \cpu.latched_rd).
Adding SRST signal on $flatten\cpu.$procdff$5284 ($dff) from module soc_top (D = $flatten\cpu.$procmux$2996_Y, Q = \cpu.latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$5998 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$2996_Y, Q = \cpu.latched_is_lb).
Adding SRST signal on $flatten\cpu.$procdff$5283 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3009_Y, Q = \cpu.latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6008 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3009_Y, Q = \cpu.latched_is_lh).
Adding SRST signal on $flatten\cpu.$procdff$5282 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3022_Y, Q = \cpu.latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6018 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3022_Y, Q = \cpu.latched_is_lu).
Adding EN signal on $flatten\cpu.$procdff$5280 ($dff) from module soc_top (D = \cpu.compressed_instr, Q = \cpu.latched_compr).
Adding SRST signal on $flatten\cpu.$procdff$5279 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3067_Y, Q = \cpu.latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6031 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3067_Y, Q = \cpu.latched_branch).
Adding SRST signal on $flatten\cpu.$procdff$5278 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3103_Y, Q = \cpu.latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6035 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3103_Y, Q = \cpu.latched_stalu).
Adding SRST signal on $flatten\cpu.$procdff$5277 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3110_Y, Q = \cpu.latched_store, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6043 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3110_Y, Q = \cpu.latched_store).
Adding SRST signal on $flatten\cpu.$procdff$5266 ($dff) from module soc_top (D = $flatten\cpu.$procmux$2734_Y, Q = \cpu.decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $flatten\cpu.$procdff$5263 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3374_Y, Q = \cpu.mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6050 ($sdff) from module soc_top (D = 1'0, Q = \cpu.mem_do_wdata).
Adding SRST signal on $flatten\cpu.$procdff$5262 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3378_Y, Q = \cpu.mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6052 ($sdff) from module soc_top (D = 1'0, Q = \cpu.mem_do_rdata).
Adding SRST signal on $flatten\cpu.$procdff$5261 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3449_Y, Q = \cpu.mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$6054 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3449_Y, Q = \cpu.mem_do_rinst).
Adding SRST signal on $flatten\cpu.$procdff$5260 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3474_Y, Q = \cpu.mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$6068 ($sdff) from module soc_top (D = $flatten\cpu.$logic_and$picorv32.v:1573$1751_Y, Q = \cpu.mem_do_prefetch).
Adding SRST signal on $flatten\cpu.$procdff$5252 ($dff) from module soc_top (D = $flatten\cpu.$procmux$2868_Y, Q = \cpu.reg_out, rval = 4096).
Adding EN signal on $flatten\cpu.$procdff$5251 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3597_Y, Q = \cpu.reg_op2).
Adding EN signal on $flatten\cpu.$procdff$5250 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3620_Y [31], Q = \cpu.reg_op1 [31]).
Adding EN signal on $flatten\cpu.$procdff$5250 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3620_Y [30:0], Q = \cpu.reg_op1 [30:0]).
Adding SRST signal on $flatten\cpu.$procdff$5249 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3684_Y, Q = \cpu.reg_next_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$6120 ($sdff) from module soc_top (D = $flatten\cpu.$procmux$3673_Y, Q = \cpu.reg_next_pc).
Adding SRST signal on $flatten\cpu.$procdff$5248 ($dff) from module soc_top (D = $flatten\cpu.$procmux$3696_Y, Q = \cpu.reg_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$6122 ($sdff) from module soc_top (D = $flatten\cpu.$3\current_pc[31:0], Q = \cpu.reg_pc).
Adding SRST signal on $flatten\cpu.$procdff$5241 ($dff) from module soc_top (D = $flatten\cpu.$procmux$2952_Y, Q = \cpu.trap, rval = 1'0).
Adding EN signal on $flatten\bram_i.$procdff$5396 ($dff) from module soc_top (D = $flatten\bram_i.$memrd$\mem$bram.v:35$1177_DATA, Q = \bram_i.rdata_reg).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$5859 ($sdffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5930 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5929 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5928 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5927 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5924 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5923 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5922 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5921 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5920 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5919 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5914 ($dffe) from module soc_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5913 ($dffe) from module soc_top.

4.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 174 unused cells and 193 unused wires.
<suppressed ~175 debug messages>

4.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~20 debug messages>

4.12.9. Rerunning OPT passes. (Maybe there is more to do..)

4.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~61 debug messages>

4.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:254:combine_resets$6049: { $flatten\cpu.$logic_or$picorv32.v:1857$1816_Y $auto$fsm_map.cc:102:implement_pattern_cache$5521 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6119: { $auto$opt_dff.cc:194:make_patterns_logic$6116 $auto$opt_dff.cc:194:make_patterns_logic$6114 $auto$opt_dff.cc:194:make_patterns_logic$6112 $auto$opt_dff.cc:194:make_patterns_logic$6110 $auto$opt_dff.cc:194:make_patterns_logic$6108 $auto$opt_dff.cc:194:make_patterns_logic$6106 $auto$opt_dff.cc:194:make_patterns_logic$6104 $auto$opt_dff.cc:194:make_patterns_logic$6102 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6100: { $auto$opt_dff.cc:194:make_patterns_logic$6083 $auto$opt_dff.cc:194:make_patterns_logic$6081 $auto$opt_dff.cc:194:make_patterns_logic$6079 $auto$opt_dff.cc:194:make_patterns_logic$6085 $auto$opt_dff.cc:194:make_patterns_logic$6087 $auto$opt_dff.cc:194:make_patterns_logic$6095 $auto$opt_dff.cc:194:make_patterns_logic$6093 $auto$opt_dff.cc:194:make_patterns_logic$6091 $auto$opt_dff.cc:194:make_patterns_logic$6089 $auto$opt_dff.cc:194:make_patterns_logic$6097 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6077: { \cpu.cpu_state [2] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6073: { \cpu.decoder_trigger \cpu.cpu_state [1] $auto$rtlil.cc:2401:Not$6071 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:220:make_patterns_logic$6030: { \cpu.cpu_state [1] \reset_cnt }
  Optimizing cells in module \soc_top.
Performed a total of 6 changes.

4.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

4.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$6028 ($dffe) from module soc_top.

4.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 1 unused cells and 29 unused wires.
<suppressed ~2 debug messages>

4.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~1 debug messages>

4.12.16. Rerunning OPT passes. (Maybe there is more to do..)

4.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

4.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.12.20. Executing OPT_DFF pass (perform DFF optimizations).

4.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.12.23. Rerunning OPT passes. (Maybe there is more to do..)

4.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

4.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.12.27. Executing OPT_DFF pass (perform DFF optimizations).

4.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.12.30. Finished OPT passes. (There is nothing left to do.)

4.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 22 address bits (of 32) from memory init port soc_top.$flatten\bram_i.$auto$proc_memwr.cc:45:proc_memwr$5441 (bram_i.mem).
Removed top 22 address bits (of 32) from memory init port soc_top.$flatten\bram_i.$auto$proc_memwr.cc:45:proc_memwr$5442 (bram_i.mem).
Removed top 22 address bits (of 32) from memory init port soc_top.$flatten\bram_i.$auto$proc_memwr.cc:45:proc_memwr$5443 (bram_i.mem).
Removed top 22 address bits (of 32) from memory init port soc_top.$flatten\bram_i.$auto$proc_memwr.cc:45:proc_memwr$5444 (bram_i.mem).
Removed top 22 address bits (of 32) from memory init port soc_top.$flatten\bram_i.$meminit$\mem$bram.v:0$1190 (bram_i.mem).
Removed top 22 address bits (of 32) from memory read port soc_top.$flatten\bram_i.$memrd$\mem$bram.v:35$1177 (bram_i.mem).
Removed top 7 bits (of 8) from port B of cell soc_top.$add$soc_top.v:29$1100 ($add).
Removed top 6 bits (of 8) from port B of cell soc_top.$eq$soc_top.v:71$1107 ($eq).
Removed top 1 bits (of 4) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5871 ($ne).
Removed top 5 bits (of 8) from FF cell soc_top.$auto$ff.cc:266:slice$5803 ($sdffe).
Removed top 1 bits (of 2) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5830 ($ne).
Removed top 1 bits (of 2) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5828 ($ne).
Removed top 1 bits (of 8) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5656 ($eq).
Removed top 1 bits (of 8) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5627 ($eq).
Removed top 1 bits (of 10) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5615 ($eq).
Removed top 1 bits (of 9) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5598 ($eq).
Removed top 1 bits (of 11) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5586 ($eq).
Removed top 1 bits (of 10) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5644 ($eq).
Removed top 11 bits (of 31) from FF cell soc_top.$auto$ff.cc:266:slice$6126 ($dffe).
Removed top 1 bits (of 2) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5995 ($ne).
Removed top 1 bits (of 5) from port B of cell soc_top.$auto$fsm_map.cc:77:implement_pattern_cache$5546 ($eq).
Removed top 1 bits (of 2) from port B of cell soc_top.$flatten\cpu.$procmux$4921_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$6059 ($ne).
Removed top 31 bits (of 32) from port B of cell soc_top.$flatten\cpu.$sub$picorv32.v:1850$1814 ($sub).
Removed top 27 bits (of 32) from port Y of cell soc_top.$flatten\cpu.$sub$picorv32.v:1850$1814 ($sub).
Removed top 29 bits (of 32) from port B of cell soc_top.$flatten\cpu.$sub$picorv32.v:1842$1807 ($sub).
Removed top 27 bits (of 32) from port Y of cell soc_top.$flatten\cpu.$sub$picorv32.v:1842$1807 ($sub).
Removed top 29 bits (of 32) from port B of cell soc_top.$flatten\cpu.$ge$picorv32.v:1835$1799 ($ge).
Removed top 29 bits (of 32) from port B of cell soc_top.$flatten\cpu.$add$picorv32.v:1560$1747 ($add).
Removed top 29 bits (of 32) from port B of cell soc_top.$flatten\cpu.$add$picorv32.v:1317$1663 ($add).
Removed top 3 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:1088$1563 ($eq).
Removed top 1 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:1066$1487 ($eq).
Removed top 1 bits (of 3) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:1059$1469 ($eq).
Removed top 1 bits (of 3) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:1049$1453 ($eq).
Removed top 2 bits (of 3) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:1041$1439 ($eq).
Removed top 1 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:878$1383 ($eq).
Removed top 2 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:877$1382 ($eq).
Removed top 1 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:876$1381 ($eq).
Removed top 5 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:875$1380 ($eq).
Removed top 2 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:868$1366 ($eq).
Removed top 1 bits (of 7) from port B of cell soc_top.$flatten\cpu.$eq$picorv32.v:867$1365 ($eq).
Removed top 30 bits (of 32) from mux cell soc_top.$flatten\cpu.$ternary$picorv32.v:617$1346 ($mux).
Removed top 3 bits (of 4) from port A of cell soc_top.$flatten\cpu.$shl$picorv32.v:419$1287 ($shl).
Removed top 1 bits (of 2) from port B of cell soc_top.$flatten\cpu.$procmux$4634_CMP0 ($eq).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$5070 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$5061 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$5052 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$5043 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$5032 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$5014 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$4996 ($mux).
Removed top 22 bits (of 32) from mux cell soc_top.$flatten\bram_i.$procmux$4978 ($mux).
Removed top 2 bits (of 3) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5869 ($ne).
Removed top 2 bits (of 3) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5867 ($ne).
Removed top 2 bits (of 3) from port B of cell soc_top.$auto$opt_dff.cc:195:make_patterns_logic$5865 ($ne).
Removed top 3 bits (of 4) from port B of cell soc_top.$flatten\uart_i.$procmux$5170_CMP0 ($eq).
Removed top 1 bits (of 10) from mux cell soc_top.$flatten\uart_i.$procmux$5155 ($mux).
Removed top 1 bits (of 10) from mux cell soc_top.$flatten\uart_i.$procmux$5152 ($mux).
Removed top 31 bits (of 32) from port B of cell soc_top.$flatten\uart_i.$sub$simpleuart.v:132$1145 ($sub).
Removed top 28 bits (of 32) from port Y of cell soc_top.$flatten\uart_i.$sub$simpleuart.v:132$1145 ($sub).
Removed top 31 bits (of 32) from port B of cell soc_top.$flatten\uart_i.$add$simpleuart.v:112$1137 ($add).
Removed top 31 bits (of 32) from port B of cell soc_top.$flatten\uart_i.$add$simpleuart.v:99$1134 ($add).
Removed top 28 bits (of 32) from port Y of cell soc_top.$flatten\uart_i.$add$simpleuart.v:99$1134 ($add).
Removed top 31 bits (of 32) from port B of cell soc_top.$flatten\uart_i.$add$simpleuart.v:74$1128 ($add).
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_ADDR[31:0]$1151.
Removed top 4 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:36$1146_DATA[31:0]$1152.
Removed top 24 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_ADDR[31:0]$1154.
Removed top 16 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:37$1147_EN[31:0]$1156.
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_ADDR[31:0]$1157.
Removed top 8 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:38$1148_EN[31:0]$1159.
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$0$memwr$\mem$bram.v:39$1149_ADDR[31:0]$1160.
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:36$1146_ADDR[31:0]$1178.
Removed top 24 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:36$1146_EN[31:0]$1180.
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:37$1147_ADDR[31:0]$1181.
Removed top 7 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:37$1147_DATA[31:0]$1182.
Removed top 16 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:37$1147_EN[31:0]$1183.
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:38$1148_ADDR[31:0]$1184.
Removed top 2 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:38$1148_DATA[31:0]$1185.
Removed top 8 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:38$1148_EN[31:0]$1186.
Removed top 22 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:39$1149_ADDR[31:0]$1187.
Removed top 1 bits (of 32) from wire soc_top.$flatten\bram_i.$2$memwr$\mem$bram.v:39$1149_DATA[31:0]$1188.
Removed top 27 bits (of 32) from wire soc_top.$flatten\cpu.$sub$picorv32.v:1842$1807_Y.
Removed top 27 bits (of 32) from wire soc_top.$flatten\cpu.$sub$picorv32.v:1850$1814_Y.
Removed top 28 bits (of 32) from wire soc_top.$flatten\uart_i.$add$simpleuart.v:99$1134_Y.
Removed top 1 bits (of 10) from wire soc_top.$flatten\uart_i.$procmux$5152_Y.
Removed top 1 bits (of 10) from wire soc_top.$flatten\uart_i.$procmux$5155_Y.
Removed top 28 bits (of 32) from wire soc_top.$flatten\uart_i.$sub$simpleuart.v:132$1145_Y.
Removed top 7 bits (of 8) from wire soc_top.$logic_not$soc_top.v:29$1099_Y.
Removed top 5 bits (of 8) from wire soc_top.debug_led_reg.

4.14. Executing PEEPOPT pass (run peephole optimizers).

4.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

4.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module soc_top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\cpu.$memrd$\cpuregs$picorv32.v:1353$1685 ($memrd):
    Found 2 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_pmux$5464 $auto$opt_reduce.cc:134:opt_pmux$5456 $auto$opt_reduce.cc:134:opt_pmux$5452 \cpu.resetn \cpu.is_slli_srli_srai \cpu.cpu_state [2] $flatten\cpu.$reduce_bool$picorv32.v:1353$1686_Y }.
    Found 1 candidates: $flatten\cpu.$memrd$\cpuregs$picorv32.v:1352$1682
    Analyzing resource sharing with $flatten\cpu.$memrd$\cpuregs$picorv32.v:1352$1682 ($memrd):
      Found 1 activation_patterns using ctrl signal { \cpu.instr_trap \cpu.is_lui_auipc_jal \cpu.cpu_state [2] $flatten\cpu.$reduce_bool$picorv32.v:1352$1683_Y }.
      Activation pattern for cell $flatten\cpu.$memrd$\cpuregs$picorv32.v:1353$1685: { $auto$opt_reduce.cc:134:opt_pmux$5464 $auto$opt_reduce.cc:134:opt_pmux$5456 $flatten\cpu.$reduce_bool$picorv32.v:1353$1686_Y } = 3'001
      Activation pattern for cell $flatten\cpu.$memrd$\cpuregs$picorv32.v:1353$1685: { $auto$opt_reduce.cc:134:opt_pmux$5452 \cpu.resetn \cpu.is_slli_srli_srai \cpu.cpu_state [2] $flatten\cpu.$reduce_bool$picorv32.v:1353$1686_Y } = 5'01011
      Activation pattern for cell $flatten\cpu.$memrd$\cpuregs$picorv32.v:1352$1682: { \cpu.instr_trap \cpu.is_lui_auipc_jal \cpu.cpu_state [2] $flatten\cpu.$reduce_bool$picorv32.v:1352$1683_Y } = 4'0011
      Size of SAT problem: 0 cells, 148 variables, 326 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:134:opt_pmux$5464 $auto$opt_reduce.cc:134:opt_pmux$5456 $auto$opt_reduce.cc:134:opt_pmux$5452 \cpu.resetn \cpu.instr_trap \cpu.is_lui_auipc_jal \cpu.is_slli_srli_srai \cpu.cpu_state [2] $flatten\cpu.$reduce_bool$picorv32.v:1352$1683_Y $flatten\cpu.$reduce_bool$picorv32.v:1353$1686_Y } = 10'0000000111
  Analyzing resource sharing options for $flatten\cpu.$memrd$\cpuregs$picorv32.v:1352$1682 ($memrd):
    Found 1 activation_patterns using ctrl signal { \cpu.instr_trap \cpu.is_lui_auipc_jal \cpu.cpu_state [2] $flatten\cpu.$reduce_bool$picorv32.v:1352$1683_Y }.
    No candidates found.

4.17. Executing TECHMAP pass (map to technology primitives).

4.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

4.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~140 debug messages>

4.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module soc_top:
  creating $macc model for $add$soc_top.v:29$1100 ($add).
  creating $macc model for $flatten\cpu.$add$picorv32.v:1240$1863 ($add).
  creating $macc model for $flatten\cpu.$add$picorv32.v:1317$1663 ($add).
  creating $macc model for $flatten\cpu.$add$picorv32.v:1560$1747 ($add).
  creating $macc model for $flatten\cpu.$add$picorv32.v:1569$1748 ($add).
  creating $macc model for $flatten\cpu.$add$picorv32.v:1806$1793 ($add).
  creating $macc model for $flatten\cpu.$add$picorv32.v:1869$1818 ($add).
  creating $macc model for $flatten\cpu.$sub$picorv32.v:1240$1862 ($sub).
  creating $macc model for $flatten\cpu.$sub$picorv32.v:1842$1807 ($sub).
  creating $macc model for $flatten\cpu.$sub$picorv32.v:1850$1814 ($sub).
  creating $macc model for $flatten\uart_i.$add$simpleuart.v:112$1137 ($add).
  creating $macc model for $flatten\uart_i.$add$simpleuart.v:74$1128 ($add).
  creating $macc model for $flatten\uart_i.$add$simpleuart.v:99$1134 ($add).
  creating $macc model for $flatten\uart_i.$sub$simpleuart.v:132$1145 ($sub).
  creating $alu model for $macc $flatten\uart_i.$sub$simpleuart.v:132$1145.
  creating $alu model for $macc $flatten\uart_i.$add$simpleuart.v:99$1134.
  creating $alu model for $macc $flatten\uart_i.$add$simpleuart.v:74$1128.
  creating $alu model for $macc $flatten\uart_i.$add$simpleuart.v:112$1137.
  creating $alu model for $macc $flatten\cpu.$sub$picorv32.v:1850$1814.
  creating $alu model for $macc $flatten\cpu.$sub$picorv32.v:1842$1807.
  creating $alu model for $macc $flatten\cpu.$sub$picorv32.v:1240$1862.
  creating $alu model for $macc $flatten\cpu.$add$picorv32.v:1869$1818.
  creating $alu model for $macc $flatten\cpu.$add$picorv32.v:1806$1793.
  creating $alu model for $macc $flatten\cpu.$add$picorv32.v:1569$1748.
  creating $alu model for $macc $flatten\cpu.$add$picorv32.v:1560$1747.
  creating $alu model for $macc $flatten\cpu.$add$picorv32.v:1317$1663.
  creating $alu model for $macc $flatten\cpu.$add$picorv32.v:1240$1863.
  creating $alu model for $macc $add$soc_top.v:29$1100.
  creating $alu model for $flatten\cpu.$ge$picorv32.v:1835$1799 ($ge): new $alu
  creating $alu model for $flatten\cpu.$lt$picorv32.v:1242$1866 ($lt): new $alu
  creating $alu model for $flatten\cpu.$lt$picorv32.v:1243$1867 ($lt): new $alu
  creating $alu model for $flatten\uart_i.$gt$simpleuart.v:130$1143 ($gt): new $alu
  creating $alu model for $flatten\uart_i.$gt$simpleuart.v:84$1131 ($gt): new $alu
  creating $alu model for $flatten\uart_i.$gt$simpleuart.v:90$1132 ($gt): new $alu
  creating $alu model for $flatten\cpu.$eq$picorv32.v:1241$1865 ($eq): merged with $flatten\cpu.$lt$picorv32.v:1243$1867.
  creating $alu cell for $flatten\uart_i.$gt$simpleuart.v:90$1132: $auto$alumacc.cc:485:replace_alu$6159
  creating $alu cell for $flatten\uart_i.$gt$simpleuart.v:84$1131: $auto$alumacc.cc:485:replace_alu$6170
  creating $alu cell for $flatten\uart_i.$gt$simpleuart.v:130$1143: $auto$alumacc.cc:485:replace_alu$6175
  creating $alu cell for $flatten\cpu.$ge$picorv32.v:1835$1799: $auto$alumacc.cc:485:replace_alu$6186
  creating $alu cell for $add$soc_top.v:29$1100: $auto$alumacc.cc:485:replace_alu$6195
  creating $alu cell for $flatten\cpu.$lt$picorv32.v:1243$1867, $flatten\cpu.$eq$picorv32.v:1241$1865: $auto$alumacc.cc:485:replace_alu$6198
  creating $alu cell for $flatten\cpu.$lt$picorv32.v:1242$1866: $auto$alumacc.cc:485:replace_alu$6209
  creating $alu cell for $flatten\cpu.$add$picorv32.v:1240$1863: $auto$alumacc.cc:485:replace_alu$6222
  creating $alu cell for $flatten\cpu.$add$picorv32.v:1317$1663: $auto$alumacc.cc:485:replace_alu$6225
  creating $alu cell for $flatten\cpu.$add$picorv32.v:1560$1747: $auto$alumacc.cc:485:replace_alu$6228
  creating $alu cell for $flatten\cpu.$add$picorv32.v:1569$1748: $auto$alumacc.cc:485:replace_alu$6231
  creating $alu cell for $flatten\cpu.$add$picorv32.v:1806$1793: $auto$alumacc.cc:485:replace_alu$6234
  creating $alu cell for $flatten\cpu.$add$picorv32.v:1869$1818: $auto$alumacc.cc:485:replace_alu$6237
  creating $alu cell for $flatten\cpu.$sub$picorv32.v:1240$1862: $auto$alumacc.cc:485:replace_alu$6240
  creating $alu cell for $flatten\cpu.$sub$picorv32.v:1842$1807: $auto$alumacc.cc:485:replace_alu$6243
  creating $alu cell for $flatten\cpu.$sub$picorv32.v:1850$1814: $auto$alumacc.cc:485:replace_alu$6246
  creating $alu cell for $flatten\uart_i.$add$simpleuart.v:112$1137: $auto$alumacc.cc:485:replace_alu$6249
  creating $alu cell for $flatten\uart_i.$add$simpleuart.v:74$1128: $auto$alumacc.cc:485:replace_alu$6252
  creating $alu cell for $flatten\uart_i.$add$simpleuart.v:99$1134: $auto$alumacc.cc:485:replace_alu$6255
  creating $alu cell for $flatten\uart_i.$sub$simpleuart.v:132$1145: $auto$alumacc.cc:485:replace_alu$6258
  created 20 $alu and 0 $macc cells.

4.21. Executing OPT pass (performing simple optimizations).

4.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~8 debug messages>

4.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

4.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.21.6. Executing OPT_DFF pass (perform DFF optimizations).

4.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

4.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.21.9. Rerunning OPT passes. (Maybe there is more to do..)

4.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

4.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.21.13. Executing OPT_DFF pass (perform DFF optimizations).

4.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.21.16. Finished OPT passes. (There is nothing left to do.)

4.22. Executing MEMORY pass.

4.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 96 transformations.

4.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 6 transformations.

4.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing soc_top.bram_i.mem write port 0.
  Analyzing soc_top.bram_i.mem write port 1.
  Analyzing soc_top.bram_i.mem write port 2.
  Analyzing soc_top.bram_i.mem write port 3.
  Analyzing soc_top.cpu.cpuregs write port 0.

4.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\bram_i.mem'[0] in module `\soc_top': merging output FF to cell.
    Write port 0: non-transparent.
    Write port 1: non-transparent.
    Write port 2: non-transparent.
    Write port 3: non-transparent.
Checking read port `\cpu.cpuregs'[0] in module `\soc_top': no output FF found.
Checking read port `\cpu.cpuregs'[1] in module `\soc_top': no output FF found.
Checking read port address `\cpu.cpuregs'[0] in module `\soc_top': merged address FF to cell.
Checking read port address `\cpu.cpuregs'[1] in module `\soc_top': merged address FF to cell.

4.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 1 unused cells and 33 unused wires.
<suppressed ~2 debug messages>

4.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory soc_top.bram_i.mem by address:
  Merging ports 0, 1 (address \cpu.mem_addr [11:2]).
  Merging ports 0, 2 (address \cpu.mem_addr [11:2]).
  Merging ports 0, 3 (address \cpu.mem_addr [11:2]).
Consolidating read ports of memory soc_top.cpu.cpuregs by address:

4.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 8 unused cells and 8 unused wires.
<suppressed ~9 debug messages>

4.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory soc_top.bram_i.mem via $__ICE40_RAM4K_
mapping memory soc_top.cpu.cpuregs via $__ICE40_RAM4K_
<suppressed ~147 debug messages>

4.25. Executing TECHMAP pass (map to technology primitives).

4.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

4.25.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

4.25.3. Continuing TECHMAP pass.
Using template $paramod$3d070b7496843f9d49f6981c720be00accf6a2ee\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$f34bd663a2b5ee92108175f28ff7d78c924d911d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$c4eb1c1567697178013e2c5248fdd33a8b75a88f\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
Using template $paramod$a1f6b5309207cf102bfb625dccbd224ad06df61d\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~102 debug messages>

4.26. Executing ICE40_BRAMINIT pass.

4.27. Executing OPT pass (performing simple optimizations).

4.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~186 debug messages>

4.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$mem.cc:1137:emulate_transparency$6352 ($dffe) from module soc_top.
Adding SRST signal on $auto$mem.cc:1616:emulate_read_first$6307 ($dff) from module soc_top (D = { $flatten\bram_i.$2$memwr$\mem$bram.v:39$1149_EN[31:0]$1189 [31] $auto$wreduce.cc:461:run$6141 [23] $auto$wreduce.cc:461:run$6138 [15] $auto$wreduce.cc:461:run$6135 [7] }, Q = $auto$mem.cc:1613:emulate_read_first$6304, rval = 4'0000).
Adding SRST signal on $auto$ff.cc:266:slice$5887 ($dffe) from module soc_top (D = $flatten\cpu.$procmux$4682_Y, Q = \cpu.mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$5861 ($dffe) from module soc_top (D = $flatten\cpu.$procmux$4624_Y, Q = \cpu.mem_state, rval = 2'00).

4.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 20 unused cells and 263 unused wires.
<suppressed ~24 debug messages>

4.27.5. Rerunning OPT passes. (Removed registers in this run.)

4.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~1 debug messages>

4.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.27.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\cpu.$procdff$5253 ($dff) from module soc_top (D = $flatten\cpu.$0\reg_sh[4:0] [1:0], Q = \cpu.reg_sh [1:0]).

4.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.27.10. Rerunning OPT passes. (Removed registers in this run.)

4.27.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.27.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.27.13. Executing OPT_DFF pass (perform DFF optimizations).

4.27.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.27.15. Finished fast OPT passes.

4.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.29. Executing OPT pass (performing simple optimizations).

4.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

4.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$2860:
      Old ports: A=\cpu.mem_rdata_word, B={ \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15:0] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7:0] }, Y=$flatten\cpu.$procmux$2860_Y
      New ports: A=\cpu.mem_rdata_word [31:8], B={ \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15] \cpu.mem_rdata_word [15:7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] \cpu.mem_rdata_word [7] }, Y=$flatten\cpu.$procmux$2860_Y [31:8]
      New connections: $flatten\cpu.$procmux$2860_Y [7:0] = \cpu.mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$3620: { \cpu.cpu_state [4] $auto$opt_reduce.cc:134:opt_pmux$6500 }
    Consolidated identical input bits for $mux cell $flatten\cpu.$procmux$3671:
      Old ports: A={ $flatten\cpu.$add$picorv32.v:1560$1747_Y [31:2] $auto$alumacc.cc:501:replace_alu$6229 [1:0] }, B={ $flatten\cpu.$add$picorv32.v:1569$1748_Y [31:1] $auto$alumacc.cc:501:replace_alu$6229 [0] }, Y=$flatten\cpu.$procmux$3671_Y
      New ports: A={ $flatten\cpu.$add$picorv32.v:1560$1747_Y [31:2] $auto$alumacc.cc:501:replace_alu$6229 [1] }, B=$flatten\cpu.$add$picorv32.v:1569$1748_Y [31:1], Y=$flatten\cpu.$procmux$3671_Y [31:1]
      New connections: $flatten\cpu.$procmux$3671_Y [0] = $auto$alumacc.cc:501:replace_alu$6229 [0]
    New ctrl vector for $pmux cell $flatten\cpu.$procmux$4624: { $flatten\cpu.$procmux$4634_CMP $auto$opt_reduce.cc:134:opt_pmux$6502 }
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$4918:
      Old ports: A={ 24'000000000000000000000000 \cpu.mem_rdata [7:0] }, B={ 24'000000000000000000000000 \cpu.mem_rdata [15:8] 24'000000000000000000000000 \cpu.mem_rdata [23:16] 24'000000000000000000000000 \cpu.mem_rdata [31:24] }, Y=$flatten\cpu.$3\mem_rdata_word[31:0]
      New ports: A=\cpu.mem_rdata [7:0], B={ \cpu.mem_rdata [15:8] \cpu.mem_rdata [23:16] \cpu.mem_rdata [31:24] }, Y=$flatten\cpu.$3\mem_rdata_word[31:0] [7:0]
      New connections: $flatten\cpu.$3\mem_rdata_word[31:0] [31:8] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\cpu.$procmux$4927:
      Old ports: A={ 16'0000000000000000 \cpu.mem_rdata [15:0] }, B={ 16'0000000000000000 \cpu.mem_rdata [31:16] }, Y=$flatten\cpu.$2\mem_rdata_word[31:0]
      New ports: A=\cpu.mem_rdata [15:0], B=\cpu.mem_rdata [31:16], Y=$flatten\cpu.$2\mem_rdata_word[31:0] [15:0]
      New connections: $flatten\cpu.$2\mem_rdata_word[31:0] [31:16] = 16'0000000000000000
    Consolidated identical input bits for $pmux cell $flatten\cpu.$procmux$4943:
      Old ports: A=\cpu.reg_op2, B={ \cpu.reg_op2 [15:0] \cpu.reg_op2 [15:0] \cpu.reg_op2 [7:0] \cpu.reg_op2 [7:0] \cpu.reg_op2 [7:0] \cpu.reg_op2 [7:0] }, Y=\cpu.mem_la_wdata
      New ports: A=\cpu.reg_op2 [31:8], B={ \cpu.reg_op2 [15:0] \cpu.reg_op2 [15:0] \cpu.reg_op2 [7:0] \cpu.reg_op2 [7:0] }, Y=\cpu.mem_la_wdata [31:8]
      New connections: \cpu.mem_la_wdata [7:0] = \cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$picorv32.v:382$1271:
      Old ports: A={ \cpu.reg_op1 [31:2] 2'00 }, B={ \cpu.next_pc [31:2] 2'00 }, Y=\cpu.mem_la_addr
      New ports: A=\cpu.reg_op1 [31:2], B=\cpu.next_pc [31:2], Y=\cpu.mem_la_addr [31:2]
      New connections: \cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$picorv32.v:411$1286:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\cpu.$ternary$picorv32.v:411$1286_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\cpu.$ternary$picorv32.v:411$1286_Y [2] $flatten\cpu.$ternary$picorv32.v:411$1286_Y [0] }
      New connections: { $flatten\cpu.$ternary$picorv32.v:411$1286_Y [3] $flatten\cpu.$ternary$picorv32.v:411$1286_Y [1] } = { $flatten\cpu.$ternary$picorv32.v:411$1286_Y [2] $flatten\cpu.$ternary$picorv32.v:411$1286_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\cpu.$ternary$picorv32.v:617$1346:
      Old ports: A=2'11, B=2'00, Y=$flatten\cpu.$procmux$4630_Y
      New ports: A=1'1, B=1'0, Y=$flatten\cpu.$procmux$4630_Y [0]
      New connections: $flatten\cpu.$procmux$4630_Y [1] = $flatten\cpu.$procmux$4630_Y [0]
    Consolidated identical input bits for $mux cell $flatten\uart_i.$ternary$simpleuart.v:53$1123:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \uart_i.recv_buf_data }, Y=\uart_rdata
      New ports: A=9'111111111, B={ 1'0 \uart_i.recv_buf_data }, Y=\uart_rdata [8:0]
      New connections: \uart_rdata [31:9] = { \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] \uart_rdata [8] }
  Optimizing cells in module \soc_top.
    Consolidated identical input bits for $mux cell $flatten\cpu.$procmux$3673:
      Old ports: A={ $flatten\cpu.$3\current_pc[31:0] [31:2] $auto$alumacc.cc:501:replace_alu$6229 [1:0] }, B=$flatten\cpu.$procmux$3671_Y, Y=$flatten\cpu.$procmux$3673_Y
      New ports: A={ $flatten\cpu.$3\current_pc[31:0] [31:2] $auto$alumacc.cc:501:replace_alu$6229 [1] }, B=$flatten\cpu.$procmux$3671_Y [31:1], Y=$flatten\cpu.$procmux$3673_Y [31:1]
      New connections: $flatten\cpu.$procmux$3673_Y [0] = $auto$alumacc.cc:501:replace_alu$6229 [0]
    Consolidated identical input bits for $mux cell $ternary$soc_top.v:79$1110:
      Old ports: A=0, B=\uart_rdata, Y=$ternary$soc_top.v:79$1110_Y
      New ports: A=9'000000000, B=\uart_rdata [8:0], Y=$ternary$soc_top.v:79$1110_Y [8:0]
      New connections: $ternary$soc_top.v:79$1110_Y [31:9] = { $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] $ternary$soc_top.v:79$1110_Y [8] }
  Optimizing cells in module \soc_top.
Performed a total of 13 changes.

4.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.29.6. Executing OPT_DFF pass (perform DFF optimizations).

4.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.29.9. Rerunning OPT passes. (Maybe there is more to do..)

4.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

4.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$5882 ($dffe) from module soc_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$5882 ($dffe) from module soc_top.

4.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.29.16. Rerunning OPT passes. (Maybe there is more to do..)

4.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \soc_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

4.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \soc_top.
Performed a total of 0 changes.

4.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.29.20. Executing OPT_DFF pass (perform DFF optimizations).

4.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.29.23. Finished OPT passes. (There is nothing left to do.)

4.30. Executing ICE40_WRAPCARRY pass (wrap carries).

4.31. Executing TECHMAP pass (map to technology primitives).

4.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

4.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $or.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~1683 debug messages>

4.32. Executing OPT pass (performing simple optimizations).

4.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~1457 debug messages>

4.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~2940 debug messages>
Removed a total of 980 cells.

4.32.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$8897 ($_SDFFE_PN0P_) from module soc_top (D = $auto$alumacc.cc:501:replace_alu$6229 [0], Q = \cpu.reg_pc [0]).

4.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 354 unused cells and 2105 unused wires.
<suppressed ~355 debug messages>

4.32.5. Rerunning OPT passes. (Removed registers in this run.)

4.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~3 debug messages>

4.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.32.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$9572 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [31], Q = \cpu.decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9571 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [30], Q = \cpu.decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9570 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [29], Q = \cpu.decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9569 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [28], Q = \cpu.decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9568 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [27], Q = \cpu.decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9567 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [26], Q = \cpu.decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9566 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [25], Q = \cpu.decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9565 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [24], Q = \cpu.decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9564 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [23], Q = \cpu.decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9563 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [22], Q = \cpu.decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9562 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [21], Q = \cpu.decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9561 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [20], Q = \cpu.decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9560 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [19], Q = \cpu.decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9559 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [18], Q = \cpu.decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9558 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [17], Q = \cpu.decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9557 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [16], Q = \cpu.decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9556 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [15], Q = \cpu.decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9555 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [14], Q = \cpu.decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9554 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [13], Q = \cpu.decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9553 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [12], Q = \cpu.decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9552 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [11], Q = \cpu.decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9551 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [10], Q = \cpu.decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9550 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [9], Q = \cpu.decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9549 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [8], Q = \cpu.decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9548 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [7], Q = \cpu.decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9547 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [6], Q = \cpu.decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9546 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [5], Q = \cpu.decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9545 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [4], Q = \cpu.decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9544 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [3], Q = \cpu.decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9543 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [2], Q = \cpu.decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$9542 ($_DFFE_PP_) from module soc_top (D = $flatten\cpu.$procmux$4072.Y_B [1], Q = \cpu.decoded_imm [1], rval = 1'0).

4.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 31 unused cells and 3 unused wires.
<suppressed ~32 debug messages>

4.32.10. Rerunning OPT passes. (Removed registers in this run.)

4.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.32.13. Executing OPT_DFF pass (perform DFF optimizations).

4.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.32.15. Finished fast OPT passes.

4.33. Executing ICE40_OPT pass (performing simple optimizations).

4.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6186.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6186.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6225.slice[0].carry: CO=\cpu.reg_pc [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6228.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6228.B [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6243.slice[0].carry: CO=\cpu.reg_sh [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6246.slice[0].carry: CO=\cpu.reg_sh [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6249.slice[0].carry: CO=\uart_i.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6252.slice[0].carry: CO=\uart_i.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6255.slice[0].carry: CO=\uart_i.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6258.slice[0].carry: CO=\uart_i.send_bitcnt [0]

4.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~43 debug messages>

4.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.33.4. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$15327 ($_SDFFE_PN0P_) from module soc_top.

4.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

4.33.6. Rerunning OPT passes. (Removed registers in this run.)

4.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) soc_top.$auto$alumacc.cc:485:replace_alu$6234.slice[0].carry: CO=1'0

4.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~2 debug messages>

4.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.33.10. Executing OPT_DFF pass (perform DFF optimizations).

4.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.33.12. Rerunning OPT passes. (Removed registers in this run.)

4.33.13. Running ICE40 specific optimizations.

4.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.33.16. Executing OPT_DFF pass (perform DFF optimizations).

4.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.33.18. Finished OPT passes. (There is nothing left to do.)

4.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.35. Executing TECHMAP pass (map to technology primitives).

4.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~699 debug messages>

4.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6225.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6228.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6234.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6243.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6246.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6249.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6252.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6255.slice[0].carry ($lut).
Mapping soc_top.$auto$alumacc.cc:485:replace_alu$6258.slice[0].carry ($lut).

4.38. Executing ICE40_OPT pass (performing simple optimizations).

4.38.1. Running ICE40 specific optimizations.

4.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.
<suppressed ~279 debug messages>

4.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
<suppressed ~1236 debug messages>
Removed a total of 412 cells.

4.38.4. Executing OPT_DFF pass (perform DFF optimizations).

4.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..
Removed 1 unused cells and 3895 unused wires.
<suppressed ~2 debug messages>

4.38.6. Rerunning OPT passes. (Removed registers in this run.)

4.38.7. Running ICE40 specific optimizations.

4.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module soc_top.

4.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\soc_top'.
Removed a total of 0 cells.

4.38.10. Executing OPT_DFF pass (perform DFF optimizations).

4.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \soc_top..

4.38.12. Finished OPT passes. (There is nothing left to do.)

4.39. Executing TECHMAP pass (map to technology primitives).

4.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

4.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.40. Executing ABC pass (technology mapping using ABC).

4.40.1. Extracting gate netlist of module `\soc_top' to `<abc-temp-dir>/input.blif'..
Extracted 3321 gates and 4295 wires to a netlist network with 972 inputs and 688 outputs.

4.40.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =    1056.
ABC: Participating nodes from both networks       =    2184.
ABC: Participating nodes from the first network   =    1061. (  74.61 % of nodes)
ABC: Participating nodes from the second network  =    1123. (  78.97 % of nodes)
ABC: Node pairs (any polarity)                    =    1061. (  74.61 % of names can be moved)
ABC: Node pairs (same polarity)                   =     860. (  60.48 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

4.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1421
ABC RESULTS:        internal signals:     2635
ABC RESULTS:           input signals:      972
ABC RESULTS:          output signals:      688
Removing temp directory.

4.41. Executing ICE40_WRAPCARRY pass (wrap carries).

4.42. Executing TECHMAP pass (map to technology primitives).

4.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

4.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 461 unused cells and 2326 unused wires.

4.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1582
  1-LUT              106
  2-LUT              114
  3-LUT              687
  4-LUT              675
  with \SB_CARRY    (#0)  253
  with \SB_CARRY    (#1)  256

Eliminating LUTs.
Number of LUTs:     1582
  1-LUT              106
  2-LUT              114
  3-LUT              687
  4-LUT              675
  with \SB_CARRY    (#0)  253
  with \SB_CARRY    (#1)  256

Combining LUTs.
Number of LUTs:     1576
  1-LUT              105
  2-LUT              112
  3-LUT              679
  4-LUT              680
  with \SB_CARRY    (#0)  253
  with \SB_CARRY    (#1)  256

Eliminated 0 LUTs.
Combined 6 LUTs.
<suppressed ~10880 debug messages>

4.44. Executing TECHMAP pass (map to technology primitives).

4.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$8c5b7259c9d9cd17395950154a06a8b3c48fdd5f\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$44587907eb547902863ad65ee925d87164ab0cc4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$d7f4570f04f68175b1fa25c1bac92938027a2c96\$lut for cells of type $lut.
Using template $paramod$4a989eea9a0134579eaf09ff597736c706f4bf42\$lut for cells of type $lut.
Using template $paramod$629288805861db2492386648ff94cc9e61d6fd7b\$lut for cells of type $lut.
Using template $paramod$162eacaa56f6f80a5a27551a5f2071c174364807\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$e2e4d79bec18c28fa313e8bd8f4df6f8a38115b2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$e4f0672b1b304c5f823c392f5c998838e860eb67\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$be58bee3028587b8431e1cc24255a5d8b7777e61\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$c045e54223c42444ef585f3b4941543c0ec8d58a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$1a70106f0baa556e1090ea4c4b6dc9be6cf15ab8\$lut for cells of type $lut.
Using template $paramod$12fb017f90e7463fe74789d2ec23494cce2be24a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$5b94a2723bee3981c7b2df99b2c284c32a3097be\$lut for cells of type $lut.
Using template $paramod$9583ab40db57ba76ead4c869be5b61dc3f252411\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$aabc38448f9289a9f09f7f433eb20ae11e3f6ed9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$cb32992e51dcc00437a87053fcf4571f3e5aa6f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$d2e6d37235ab843778c678747f5760d5e87de899\$lut for cells of type $lut.
Using template $paramod$070c25fd511137f15d1e71bbe71a249842a7ac16\$lut for cells of type $lut.
Using template $paramod$8b6a4199be153cc17a76655c5a99a429759d1cb8\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$0bdd0ea3a368de5cc9b8e715a13529d6c4c63bad\$lut for cells of type $lut.
Using template $paramod$a0110ffcad984c8a190b4246c453a50168ed201c\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$2148a1805a1c3b3bf66b2f659d4ba0e8506227b2\$lut for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod$ad823946862e656cf7f96d606b18b8f972dc6d6c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
No more expansions possible.
<suppressed ~3087 debug messages>
Removed 0 unused cells and 3493 unused wires.

4.45. Executing AUTONAME pass.
Renamed 71882 objects in module soc_top (75 iterations).
<suppressed ~3366 debug messages>

4.46. Executing HIERARCHY pass (managing design hierarchy).

4.46.1. Analyzing design hierarchy..
Top module:  \soc_top

4.46.2. Analyzing design hierarchy..
Top module:  \soc_top
Removed 0 unused modules.

4.47. Printing statistics.

=== soc_top ===

   Number of wires:                982
   Number of wire bits:           5006
   Number of public wires:         982
   Number of public wire bits:    5006
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2566
     SB_CARRY                      352
     SB_DFF                        134
     SB_DFFE                       236
     SB_DFFESR                     165
     SB_DFFESS                      18
     SB_DFFSR                       70
     SB_DFFSS                        1
     SB_HFOSC                        1
     SB_LUT4                      1576
     SB_RAM40_4K                    12
     SB_RGBA_DRV                     1

4.48. Executing CHECK pass (checking for obvious problems).
Checking module soc_top...
Found and reported 0 problems.

4.49. Executing JSON backend.

End of script. Logfile hash: 03168708cc, CPU: user 5.73s system 0.02s, MEM: 48.86 MB peak
Yosys 0.33 (git sha1 2584903a060)
Time spent: 23% 33x opt_expr (1 sec), 22% 7x techmap (1 sec), ...
