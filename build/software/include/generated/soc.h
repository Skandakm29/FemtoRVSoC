//--------------------------------------------------------------------------------
// Auto-generated by LiteX (eda4e49b7) on 2025-07-14 18:59:22
//--------------------------------------------------------------------------------
#ifndef __GENERATED_SOC_H
#define __GENERATED_SOC_H
#define CONFIG_PLATFORM_NAME "vsd_mini_fpga"
#define CONFIG_CLOCK_FREQUENCY 12000000
#define CONFIG_CPU_RESET_ADDR 0
#define CONFIG_CPU_TYPE_FEMTORV
#define CONFIG_CPU_VARIANT_QUARK
#define CONFIG_CPU_FAMILY "riscv"
#define CONFIG_CPU_NAME "femtorv"
#define CONFIG_CPU_HUMAN_NAME "FemtoRV-QUARK"
#define CONFIG_CPU_NOP "nop"
#define CONFIG_ROM_INIT 1
#define UART_POLLING
#define CONFIG_CSR_DATA_WIDTH 32
#define CONFIG_CSR_ALIGNMENT 32
#define CONFIG_BUS_STANDARD "wishbone"
#define CONFIG_BUS_DATA_WIDTH 32
#define CONFIG_BUS_ADDRESS_WIDTH 32
#define CONFIG_BUS_BURSTING 0

#ifndef __ASSEMBLER__
static inline const char * config_platform_name_read(void) {
	return "vsd_mini_fpga";
}
static inline int config_clock_frequency_read(void) {
	return 12000000;
}
static inline int config_cpu_reset_addr_read(void) {
	return 0;
}
static inline const char * config_cpu_family_read(void) {
	return "riscv";
}
static inline const char * config_cpu_name_read(void) {
	return "femtorv";
}
static inline const char * config_cpu_human_name_read(void) {
	return "FemtoRV-QUARK";
}
static inline const char * config_cpu_nop_read(void) {
	return "nop";
}
static inline int config_rom_init_read(void) {
	return 1;
}
static inline int config_csr_data_width_read(void) {
	return 32;
}
static inline int config_csr_alignment_read(void) {
	return 32;
}
static inline const char * config_bus_standard_read(void) {
	return "wishbone";
}
static inline int config_bus_data_width_read(void) {
	return 32;
}
static inline int config_bus_address_width_read(void) {
	return 32;
}
static inline int config_bus_bursting_read(void) {
	return 0;
}
#endif // !__ASSEMBLER__

#endif
